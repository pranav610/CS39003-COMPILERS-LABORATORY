Terminals unused in grammar

    STRUCT
    TYPEDEF
    UNION
    ELLIPSIS
    HASH
    ENUMERATION_CONSTANT


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | CONSTANT
    3                   | STRING_LITERAL
    4                   | ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE

    5 postfix_expression: primary_expression
    6                   | postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
    7                   | postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
    8                   | postfix_expression DOT IDENTIFIER
    9                   | postfix_expression ARROW IDENTIFIER
   10                   | postfix_expression INCREMENT
   11                   | postfix_expression DECREMENT
   12                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

   14 argument_expression_list_opt: argument_expression_list
   15                             | %empty

   16 argument_expression_list: assignment_expression
   17                         | argument_expression_list COMMA assignment_expression

   18 unary_expression: postfix_expression
   19                 | INCREMENT unary_expression
   20                 | DECREMENT unary_expression
   21                 | unary_operator cast_expression
   22                 | SIZEOF unary_expression
   23                 | SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

   24 unary_operator: BITWISE_AND
   25               | MULTIPLY
   26               | ADD
   27               | SUBTRACT
   28               | BITWISE_NOT
   29               | LOGICAL_NOT

   30 cast_expression: unary_expression
   31                | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression

   32 multiplicative_expression: cast_expression
   33                          | multiplicative_expression MULTIPLY cast_expression
   34                          | multiplicative_expression DIVIDE cast_expression
   35                          | multiplicative_expression MODULUS cast_expression

   36 additive_expression: multiplicative_expression
   37                    | additive_expression ADD multiplicative_expression
   38                    | additive_expression SUBTRACT multiplicative_expression

   39 shift_expression: additive_expression
   40                 | shift_expression LEFT_SHIFT additive_expression
   41                 | shift_expression RIGHT_SHIFT additive_expression

   42 relational_expression: shift_expression
   43                      | relational_expression LESS_THAN shift_expression
   44                      | relational_expression GREATER_THAN shift_expression
   45                      | relational_expression LESS_THAN_OR_EQUAL_TO shift_expression
   46                      | relational_expression GREATER_THAN_OR_EQUAL_TO shift_expression

   47 equality_expression: relational_expression
   48                    | equality_expression EQUAL_TO relational_expression
   49                    | equality_expression NOT_EQUAL_TO relational_expression

   50 AND_expression: equality_expression
   51               | AND_expression BITWISE_AND equality_expression

   52 exclusive_OR_expression: AND_expression
   53                        | exclusive_OR_expression BITWISE_XOR AND_expression

   54 inclusive_OR_expression: exclusive_OR_expression
   55                        | inclusive_OR_expression BITWISE_OR exclusive_OR_expression

   56 logical_AND_expression: inclusive_OR_expression
   57                       | logical_AND_expression LOGICAL_AND inclusive_OR_expression

   58 logical_OR_expression: logical_AND_expression
   59                      | logical_OR_expression LOGICAL_OR logical_AND_expression

   60 conditional_expression: logical_OR_expression
   61                       | logical_OR_expression QUESTION_MARK expression COLON conditional_expression

   62 assignment_expression: conditional_expression
   63                      | unary_expression assignment_operator assignment_expression

   64 assignment_operator: ASSIGNMENT
   65                    | MULTIPLY_ASSIGNMENT
   66                    | DIVIDE_ASSIGNMENT
   67                    | MODULUS_ASSIGNMENT
   68                    | ADD_ASSIGNMENT
   69                    | SUBTRACT_ASSIGNMENT
   70                    | LEFT_SHIFT_ASSIGNMENT
   71                    | RIGHT_SHIFT_ASSIGNMENT
   72                    | BITWISE_AND_ASSIGNMENT
   73                    | BITWISE_XOR_ASSIGNMENT
   74                    | BITWISE_OR_ASSIGNMENT

   75 expression: assignment_expression
   76           | expression COMMA assignment_expression

   77 constant_expression: conditional_expression

   78 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON

   79 init_declarator_list_opt: init_declarator_list
   80                         | %empty

   81 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   82                       | type_specifier declaration_specifiers_opt
   83                       | type_qualifier declaration_specifiers_opt
   84                       | function_specifier declaration_specifiers_opt

   85 declaration_specifiers_opt: declaration_specifiers
   86                           | %empty

   87 init_declarator_list: init_declarator
   88                     | init_declarator_list COMMA init_declarator

   89 init_declarator: declarator
   90                | declarator ASSIGNMENT initializer

   91 storage_class_specifier: EXTERN
   92                        | STATIC
   93                        | AUTO
   94                        | REGISTER

   95 type_specifier: VOID
   96               | CHAR
   97               | SHORT
   98               | INT
   99               | LONG
  100               | FLOAT
  101               | DOUBLE
  102               | SIGNED
  103               | UNSIGNED
  104               | _BOOL
  105               | _COMPLEX
  106               | _IMAGINARY
  107               | enum_specifier

  108 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  109                         | type_qualifier specifier_qualifier_list_opt

  110 specifier_qualifier_list_opt: specifier_qualifier_list
  111                             | %empty

  112 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  113               | ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
  114               | ENUM IDENTIFIER

  115 identifier_opt: IDENTIFIER
  116               | %empty

  117 enumerator_list: enumerator
  118                | enumerator_list COMMA enumerator

  119 enumerator: IDENTIFIER
  120           | IDENTIFIER ASSIGNMENT constant_expression

  121 type_qualifier: CONST
  122               | RESTRICT
  123               | VOLATILE

  124 function_specifier: INLINE

  125 declarator: pointer_opt direct_declarator

  126 pointer_opt: pointer
  127            | %empty

  128 direct_declarator: IDENTIFIER
  129                  | ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE
  130                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE
  131                  | direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  132                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  133                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt MULTIPLY SQUARE_BRACKET_CLOSE
  134                  | direct_declarator ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE
  135                  | direct_declarator ROUND_BRACKET_OPEN identifier_list_opt ROUND_BRACKET_CLOSE

  136 type_qualifier_list_opt: type_qualifier_list
  137                        | %empty

  138 assignment_expression_opt: assignment_expression
  139                          | %empty

  140 identifier_list_opt: identifier_list
  141                    | %empty

  142 pointer: MULTIPLY type_qualifier_list_opt
  143        | MULTIPLY type_qualifier_list_opt pointer

  144 type_qualifier_list: type_qualifier
  145                    | type_qualifier_list type_qualifier

  146 parameter_type_list: parameter_declaration
  147                    | parameter_list COMMA parameter_declaration

  148 parameter_list: parameter_declaration
  149               | parameter_list COMMA parameter_declaration

  150 parameter_declaration: declaration_specifiers declarator
  151                      | declaration_specifiers

  152 identifier_list: IDENTIFIER
  153                | identifier_list COMMA IDENTIFIER

  154 type_name: specifier_qualifier_list

  155 initializer: assignment_expression
  156            | CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  157            | CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

  158 initializer_list: designation_opt initializer
  159                 | initializer_list COMMA designation_opt initializer

  160 designation_opt: designation
  161                | %empty

  162 designation: designator_list ASSIGNMENT

  163 designator_list: designator
  164                | designator_list designator

  165 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE
  166           | DOT IDENTIFIER

  167 statement: labeled_statement
  168          | compound_statement
  169          | expression_statement
  170          | selection_statement
  171          | iteration_statement
  172          | jump_statement

  173 labeled_statement: IDENTIFIER COLON statement
  174                  | CASE constant_expression COLON statement
  175                  | DEFAULT COLON statement

  176 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

  177 block_item_list_opt: block_item_list
  178                    | %empty

  179 block_item_list: block_item
  180                | block_item_list block_item

  181 block_item: declaration
  182           | statement

  183 expression_statement: expression_opt SEMICOLON

  184 expression_opt: expression
  185               | %empty

  186 selection_statement: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement
  187                    | IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE statement
  188                    | SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

  189 iteration_statement: WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement
  190                    | DO statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  191                    | FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement
  192                    | FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

  193 jump_statement: GOTO IDENTIFIER SEMICOLON
  194               | CONTINUE SEMICOLON
  195               | BREAK SEMICOLON
  196               | RETURN expression_opt SEMICOLON

  197 translation_unit: external_declaration
  198                 | translation_unit external_declaration

  199 external_declaration: function_definition
  200                     | declaration

  201 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  202 declaration_list_opt: declaration_list
  203                     | %empty

  204 declaration_list: declaration
  205                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AUTO (258) 93
    BREAK (259) 195
    CASE (260) 174
    CHAR (261) 96
    CONST (262) 121
    CONTINUE (263) 194
    DEFAULT (264) 175
    DO (265) 190
    DOUBLE (266) 101
    ELSE (267) 187
    ENUM (268) 112 113 114
    EXTERN (269) 91
    FLOAT (270) 100
    FOR (271) 191 192
    GOTO (272) 193
    IF (273) 186 187
    INLINE (274) 124
    INT (275) 98
    LONG (276) 99
    REGISTER (277) 94
    RESTRICT (278) 122
    RETURN (279) 196
    SHORT (280) 97
    SIGNED (281) 102
    SIZEOF (282) 22 23
    STATIC (283) 92 131 132
    STRUCT (284)
    SWITCH (285) 188
    TYPEDEF (286)
    UNION (287)
    UNSIGNED (288) 103
    VOID (289) 95
    VOLATILE (290) 123
    WHILE (291) 189 190
    _BOOL (292) 104
    _COMPLEX (293) 105
    _IMAGINARY (294) 106
    SQUARE_BRACKET_OPEN (295) 6 130 131 132 133 165
    SQUARE_BRACKET_CLOSE (296) 6 130 131 132 133 165
    ROUND_BRACKET_OPEN (297) 4 7 12 13 23 31 129 134 135 186 187 188 189 190 191 192
    ROUND_BRACKET_CLOSE (298) 4 7 12 13 23 31 129 134 135 186 187 188 189 190 191 192
    CURLY_BRACKET_OPEN (299) 12 13 112 113 156 157 176
    CURLY_BRACKET_CLOSE (300) 12 13 112 113 156 157 176
    DOT (301) 8 166
    ARROW (302) 9
    INCREMENT (303) 10 19
    DECREMENT (304) 11 20
    BITWISE_AND (305) 24 51
    MULTIPLY (306) 25 33 133 142 143
    ADD (307) 26 37
    SUBTRACT (308) 27 38
    BITWISE_NOT (309) 28
    LOGICAL_NOT (310) 29
    DIVIDE (311) 34
    MODULUS (312) 35
    LEFT_SHIFT (313) 40
    RIGHT_SHIFT (314) 41
    LESS_THAN (315) 43
    GREATER_THAN (316) 44
    LESS_THAN_OR_EQUAL_TO (317) 45
    GREATER_THAN_OR_EQUAL_TO (318) 46
    EQUAL_TO (319) 48
    NOT_EQUAL_TO (320) 49
    BITWISE_XOR (321) 53
    BITWISE_OR (322) 55
    LOGICAL_AND (323) 57
    LOGICAL_OR (324) 59
    QUESTION_MARK (325) 61
    COLON (326) 61 173 174 175
    SEMICOLON (327) 78 183 190 191 192 193 194 195 196
    ELLIPSIS (328)
    ASSIGNMENT (329) 64 90 120 162
    MULTIPLY_ASSIGNMENT (330) 65
    DIVIDE_ASSIGNMENT (331) 66
    MODULUS_ASSIGNMENT (332) 67
    ADD_ASSIGNMENT (333) 68
    SUBTRACT_ASSIGNMENT (334) 69
    LEFT_SHIFT_ASSIGNMENT (335) 70
    RIGHT_SHIFT_ASSIGNMENT (336) 71
    BITWISE_AND_ASSIGNMENT (337) 72
    BITWISE_XOR_ASSIGNMENT (338) 73
    BITWISE_OR_ASSIGNMENT (339) 74
    COMMA (340) 13 17 76 88 113 118 147 149 153 157 159
    HASH (341)
    CONSTANT (342) 2
    IDENTIFIER (343) 1 8 9 114 115 119 120 128 152 153 166 173 193
    STRING_LITERAL (344) 3
    ENUMERATION_CONSTANT (345)


Nonterminals, with rules where they appear

    $accept (91)
        on left: 0
    primary_expression (92)
        on left: 1 2 3 4
        on right: 5
    postfix_expression (93)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 6 7 8 9 10 11 18
    argument_expression_list_opt (94)
        on left: 14 15
        on right: 7
    argument_expression_list (95)
        on left: 16 17
        on right: 14 17
    unary_expression (96)
        on left: 18 19 20 21 22 23
        on right: 19 20 22 30 63
    unary_operator (97)
        on left: 24 25 26 27 28 29
        on right: 21
    cast_expression (98)
        on left: 30 31
        on right: 21 31 32 33 34 35
    multiplicative_expression (99)
        on left: 32 33 34 35
        on right: 33 34 35 36 37 38
    additive_expression (100)
        on left: 36 37 38
        on right: 37 38 39 40 41
    shift_expression (101)
        on left: 39 40 41
        on right: 40 41 42 43 44 45 46
    relational_expression (102)
        on left: 42 43 44 45 46
        on right: 43 44 45 46 47 48 49
    equality_expression (103)
        on left: 47 48 49
        on right: 48 49 50 51
    AND_expression (104)
        on left: 50 51
        on right: 51 52 53
    exclusive_OR_expression (105)
        on left: 52 53
        on right: 53 54 55
    inclusive_OR_expression (106)
        on left: 54 55
        on right: 55 56 57
    logical_AND_expression (107)
        on left: 56 57
        on right: 57 58 59
    logical_OR_expression (108)
        on left: 58 59
        on right: 59 60 61
    conditional_expression (109)
        on left: 60 61
        on right: 61 62 77
    assignment_expression (110)
        on left: 62 63
        on right: 16 17 63 75 76 131 132 138 155
    assignment_operator (111)
        on left: 64 65 66 67 68 69 70 71 72 73 74
        on right: 63
    expression (112)
        on left: 75 76
        on right: 4 6 61 76 184 186 187 188 189 190
    constant_expression (113)
        on left: 77
        on right: 120 165 174
    declaration (114)
        on left: 78
        on right: 181 192 200 204 205
    init_declarator_list_opt (115)
        on left: 79 80
        on right: 78
    declaration_specifiers (116)
        on left: 81 82 83 84
        on right: 78 85 150 151 201
    declaration_specifiers_opt (117)
        on left: 85 86
        on right: 81 82 83 84
    init_declarator_list (118)
        on left: 87 88
        on right: 79 88
    init_declarator (119)
        on left: 89 90
        on right: 87 88
    storage_class_specifier (120)
        on left: 91 92 93 94
        on right: 81
    type_specifier (121)
        on left: 95 96 97 98 99 100 101 102 103 104 105 106 107
        on right: 82 108
    specifier_qualifier_list (122)
        on left: 108 109
        on right: 110 154
    specifier_qualifier_list_opt (123)
        on left: 110 111
        on right: 108 109
    enum_specifier (124)
        on left: 112 113 114
        on right: 107
    identifier_opt (125)
        on left: 115 116
        on right: 112 113
    enumerator_list (126)
        on left: 117 118
        on right: 112 113 118
    enumerator (127)
        on left: 119 120
        on right: 117 118
    type_qualifier (128)
        on left: 121 122 123
        on right: 83 109 144 145
    function_specifier (129)
        on left: 124
        on right: 84
    declarator (130)
        on left: 125
        on right: 89 90 129 150 201
    pointer_opt (131)
        on left: 126 127
        on right: 125
    direct_declarator (132)
        on left: 128 129 130 131 132 133 134 135
        on right: 125 130 131 132 133 134 135
    type_qualifier_list_opt (133)
        on left: 136 137
        on right: 130 131 133 142 143
    assignment_expression_opt (134)
        on left: 138 139
        on right: 130
    identifier_list_opt (135)
        on left: 140 141
        on right: 135
    pointer (136)
        on left: 142 143
        on right: 126 143
    type_qualifier_list (137)
        on left: 144 145
        on right: 132 136 145
    parameter_type_list (138)
        on left: 146 147
        on right: 134
    parameter_list (139)
        on left: 148 149
        on right: 147 149
    parameter_declaration (140)
        on left: 150 151
        on right: 146 147 148 149
    identifier_list (141)
        on left: 152 153
        on right: 140 153
    type_name (142)
        on left: 154
        on right: 12 13 23 31
    initializer (143)
        on left: 155 156 157
        on right: 90 158 159
    initializer_list (144)
        on left: 158 159
        on right: 12 13 156 157 159
    designation_opt (145)
        on left: 160 161
        on right: 158 159
    designation (146)
        on left: 162
        on right: 160
    designator_list (147)
        on left: 163 164
        on right: 162 164
    designator (148)
        on left: 165 166
        on right: 163 164
    statement (149)
        on left: 167 168 169 170 171 172
        on right: 173 174 175 182 186 187 188 189 190 191 192
    labeled_statement (150)
        on left: 173 174 175
        on right: 167
    compound_statement (151)
        on left: 176
        on right: 168 201
    block_item_list_opt (152)
        on left: 177 178
        on right: 176
    block_item_list (153)
        on left: 179 180
        on right: 177 180
    block_item (154)
        on left: 181 182
        on right: 179 180
    expression_statement (155)
        on left: 183
        on right: 169
    expression_opt (156)
        on left: 184 185
        on right: 183 191 192 196
    selection_statement (157)
        on left: 186 187 188
        on right: 170
    iteration_statement (158)
        on left: 189 190 191 192
        on right: 171
    jump_statement (159)
        on left: 193 194 195 196
        on right: 172
    translation_unit (160)
        on left: 197 198
        on right: 0 198
    external_declaration (161)
        on left: 199 200
        on right: 197 198
    function_definition (162)
        on left: 201
        on right: 199
    declaration_list_opt (163)
        on left: 202 203
        on right: 201
    declaration_list (164)
        on left: 204 205
        on right: 202 205


State 0

    0 $accept: . translation_unit $end

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

   93 storage_class_specifier: AUTO .

    $default  reduce using rule 93 (storage_class_specifier)


State 2

   96 type_specifier: CHAR .

    $default  reduce using rule 96 (type_specifier)


State 3

  121 type_qualifier: CONST .

    $default  reduce using rule 121 (type_qualifier)


State 4

  101 type_specifier: DOUBLE .

    $default  reduce using rule 101 (type_specifier)


State 5

  112 enum_specifier: ENUM . identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  113               | ENUM . identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
  114               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 116 (identifier_opt)

    identifier_opt  go to state 33


State 6

   91 storage_class_specifier: EXTERN .

    $default  reduce using rule 91 (storage_class_specifier)


State 7

  100 type_specifier: FLOAT .

    $default  reduce using rule 100 (type_specifier)


State 8

  124 function_specifier: INLINE .

    $default  reduce using rule 124 (function_specifier)


State 9

   98 type_specifier: INT .

    $default  reduce using rule 98 (type_specifier)


State 10

   99 type_specifier: LONG .

    $default  reduce using rule 99 (type_specifier)


State 11

   94 storage_class_specifier: REGISTER .

    $default  reduce using rule 94 (storage_class_specifier)


State 12

  122 type_qualifier: RESTRICT .

    $default  reduce using rule 122 (type_qualifier)


State 13

   97 type_specifier: SHORT .

    $default  reduce using rule 97 (type_specifier)


State 14

  102 type_specifier: SIGNED .

    $default  reduce using rule 102 (type_specifier)


State 15

   92 storage_class_specifier: STATIC .

    $default  reduce using rule 92 (storage_class_specifier)


State 16

  103 type_specifier: UNSIGNED .

    $default  reduce using rule 103 (type_specifier)


State 17

   95 type_specifier: VOID .

    $default  reduce using rule 95 (type_specifier)


State 18

  123 type_qualifier: VOLATILE .

    $default  reduce using rule 123 (type_qualifier)


State 19

  104 type_specifier: _BOOL .

    $default  reduce using rule 104 (type_specifier)


State 20

  105 type_specifier: _COMPLEX .

    $default  reduce using rule 105 (type_specifier)


State 21

  106 type_specifier: _IMAGINARY .

    $default  reduce using rule 106 (type_specifier)


State 22

  200 external_declaration: declaration .

    $default  reduce using rule 200 (external_declaration)


State 23

   78 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON
  201 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement

    MULTIPLY  shift, and go to state 34

    SEMICOLON  reduce using rule 80 (init_declarator_list_opt)
    $default   reduce using rule 127 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 38
    pointer_opt               go to state 39
    pointer                   go to state 40


State 24

   81 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 42
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 25

   82 declaration_specifiers: type_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 43
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 26

  107 type_specifier: enum_specifier .

    $default  reduce using rule 107 (type_specifier)


State 27

   83 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 28

   84 declaration_specifiers: function_specifier . declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 29

    0 $accept: translation_unit . $end
  198 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 46
    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 47
    function_definition      go to state 31


State 30

  197 translation_unit: external_declaration .

    $default  reduce using rule 197 (translation_unit)


State 31

  199 external_declaration: function_definition .

    $default  reduce using rule 199 (external_declaration)


State 32

  114 enum_specifier: ENUM IDENTIFIER .
  115 identifier_opt: IDENTIFIER .

    CURLY_BRACKET_OPEN  reduce using rule 115 (identifier_opt)
    $default            reduce using rule 114 (enum_specifier)


State 33

  112 enum_specifier: ENUM identifier_opt . CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  113               | ENUM identifier_opt . CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 48


State 34

  142 pointer: MULTIPLY . type_qualifier_list_opt
  143        | MULTIPLY . type_qualifier_list_opt pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 137 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 50
    type_qualifier_list      go to state 51


State 35

   78 declaration: declaration_specifiers init_declarator_list_opt . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 36

   79 init_declarator_list_opt: init_declarator_list .
   88 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 53

    $default  reduce using rule 79 (init_declarator_list_opt)


State 37

   87 init_declarator_list: init_declarator .

    $default  reduce using rule 87 (init_declarator_list)


State 38

   89 init_declarator: declarator .
   90                | declarator . ASSIGNMENT initializer
  201 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    ASSIGNMENT  shift, and go to state 54

    CURLY_BRACKET_OPEN  reduce using rule 203 (declaration_list_opt)
    $default            reduce using rule 89 (init_declarator)

    declaration              go to state 55
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list_opt     go to state 57
    declaration_list         go to state 58


State 39

  125 declarator: pointer_opt . direct_declarator

    ROUND_BRACKET_OPEN  shift, and go to state 59
    IDENTIFIER          shift, and go to state 60

    direct_declarator  go to state 61


State 40

  126 pointer_opt: pointer .

    $default  reduce using rule 126 (pointer_opt)


State 41

   85 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 85 (declaration_specifiers_opt)


State 42

   81 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 81 (declaration_specifiers)


State 43

   82 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 82 (declaration_specifiers)


State 44

   83 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 83 (declaration_specifiers)


State 45

   84 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 84 (declaration_specifiers)


State 46

    0 $accept: translation_unit $end .

    $default  accept


State 47

  198 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 198 (translation_unit)


State 48

  112 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN . enumerator_list CURLY_BRACKET_CLOSE
  113               | ENUM identifier_opt CURLY_BRACKET_OPEN . enumerator_list COMMA CURLY_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 62

    enumerator_list  go to state 63
    enumerator       go to state 64


State 49

  144 type_qualifier_list: type_qualifier .

    $default  reduce using rule 144 (type_qualifier_list)


State 50

  142 pointer: MULTIPLY type_qualifier_list_opt .
  143        | MULTIPLY type_qualifier_list_opt . pointer

    MULTIPLY  shift, and go to state 34

    $default  reduce using rule 142 (pointer)

    pointer  go to state 65


State 51

  136 type_qualifier_list_opt: type_qualifier_list .
  145 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 136 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 52

   78 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON .

    $default  reduce using rule 78 (declaration)


State 53

   88 init_declarator_list: init_declarator_list COMMA . init_declarator

    MULTIPLY  shift, and go to state 34

    $default  reduce using rule 127 (pointer_opt)

    init_declarator  go to state 67
    declarator       go to state 68
    pointer_opt      go to state 39
    pointer          go to state 40


State 54

   90 init_declarator: declarator ASSIGNMENT . initializer

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 71
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 99
    initializer                go to state 100


State 55

  204 declaration_list: declaration .

    $default  reduce using rule 204 (declaration_list)


State 56

   78 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON

    MULTIPLY  shift, and go to state 34

    SEMICOLON  reduce using rule 80 (init_declarator_list_opt)
    $default   reduce using rule 127 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 68
    pointer_opt               go to state 39
    pointer                   go to state 40


State 57

  201 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    CURLY_BRACKET_OPEN  shift, and go to state 101

    compound_statement  go to state 102


State 58

  202 declaration_list_opt: declaration_list .
  205 declaration_list: declaration_list . declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 202 (declaration_list_opt)

    declaration              go to state 103
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 59

  129 direct_declarator: ROUND_BRACKET_OPEN . declarator ROUND_BRACKET_CLOSE

    MULTIPLY  shift, and go to state 34

    $default  reduce using rule 127 (pointer_opt)

    declarator   go to state 104
    pointer_opt  go to state 39
    pointer      go to state 40


State 60

  128 direct_declarator: IDENTIFIER .

    $default  reduce using rule 128 (direct_declarator)


State 61

  125 declarator: pointer_opt direct_declarator .
  130 direct_declarator: direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE
  131                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  132                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  133                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list_opt MULTIPLY SQUARE_BRACKET_CLOSE
  134                  | direct_declarator . ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE
  135                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list_opt ROUND_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 105
    ROUND_BRACKET_OPEN   shift, and go to state 106

    $default  reduce using rule 125 (declarator)


State 62

  119 enumerator: IDENTIFIER .
  120           | IDENTIFIER . ASSIGNMENT constant_expression

    ASSIGNMENT  shift, and go to state 107

    $default  reduce using rule 119 (enumerator)


State 63

  112 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list . CURLY_BRACKET_CLOSE
  113               | ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list . COMMA CURLY_BRACKET_CLOSE
  118 enumerator_list: enumerator_list . COMMA enumerator

    CURLY_BRACKET_CLOSE  shift, and go to state 108
    COMMA                shift, and go to state 109


State 64

  117 enumerator_list: enumerator .

    $default  reduce using rule 117 (enumerator_list)


State 65

  143 pointer: MULTIPLY type_qualifier_list_opt pointer .

    $default  reduce using rule 143 (pointer)


State 66

  145 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 145 (type_qualifier_list)


State 67

   88 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 88 (init_declarator_list)


State 68

   89 init_declarator: declarator .
   90                | declarator . ASSIGNMENT initializer

    ASSIGNMENT  shift, and go to state 54

    $default  reduce using rule 89 (init_declarator)


State 69

   22 unary_expression: SIZEOF . unary_expression
   23                 | SIZEOF . ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 110
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 111
    unary_operator      go to state 86


State 70

    4 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   12 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   31 cast_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE cast_expression

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 113
    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    enum_specifier             go to state 26
    type_qualifier             go to state 116
    type_name                  go to state 117


State 71

  156 initializer: CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
  157            | CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 118
    DOT                  shift, and go to state 119

    $default  reduce using rule 161 (designation_opt)

    initializer_list  go to state 120
    designation_opt   go to state 121
    designation       go to state 122
    designator_list   go to state 123
    designator        go to state 124


State 72

   19 unary_expression: INCREMENT . unary_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 125
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 126
    unary_operator      go to state 86


State 73

   20 unary_expression: DECREMENT . unary_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 125
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 127
    unary_operator      go to state 86


State 74

   24 unary_operator: BITWISE_AND .

    $default  reduce using rule 24 (unary_operator)


State 75

   25 unary_operator: MULTIPLY .

    $default  reduce using rule 25 (unary_operator)


State 76

   26 unary_operator: ADD .

    $default  reduce using rule 26 (unary_operator)


State 77

   27 unary_operator: SUBTRACT .

    $default  reduce using rule 27 (unary_operator)


State 78

   28 unary_operator: BITWISE_NOT .

    $default  reduce using rule 28 (unary_operator)


State 79

   29 unary_operator: LOGICAL_NOT .

    $default  reduce using rule 29 (unary_operator)


State 80

    2 primary_expression: CONSTANT .

    $default  reduce using rule 2 (primary_expression)


State 81

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 82

    3 primary_expression: STRING_LITERAL .

    $default  reduce using rule 3 (primary_expression)


State 83

    5 postfix_expression: primary_expression .

    $default  reduce using rule 5 (postfix_expression)


State 84

    6 postfix_expression: postfix_expression . SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
    7                   | postfix_expression . ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
    8                   | postfix_expression . DOT IDENTIFIER
    9                   | postfix_expression . ARROW IDENTIFIER
   10                   | postfix_expression . INCREMENT
   11                   | postfix_expression . DECREMENT
   18 unary_expression: postfix_expression .

    SQUARE_BRACKET_OPEN  shift, and go to state 128
    ROUND_BRACKET_OPEN   shift, and go to state 129
    DOT                  shift, and go to state 130
    ARROW                shift, and go to state 131
    INCREMENT            shift, and go to state 132
    DECREMENT            shift, and go to state 133

    $default  reduce using rule 18 (unary_expression)


State 85

   30 cast_expression: unary_expression .
   63 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGNMENT              shift, and go to state 134
    MULTIPLY_ASSIGNMENT     shift, and go to state 135
    DIVIDE_ASSIGNMENT       shift, and go to state 136
    MODULUS_ASSIGNMENT      shift, and go to state 137
    ADD_ASSIGNMENT          shift, and go to state 138
    SUBTRACT_ASSIGNMENT     shift, and go to state 139
    LEFT_SHIFT_ASSIGNMENT   shift, and go to state 140
    RIGHT_SHIFT_ASSIGNMENT  shift, and go to state 141
    BITWISE_AND_ASSIGNMENT  shift, and go to state 142
    BITWISE_XOR_ASSIGNMENT  shift, and go to state 143
    BITWISE_OR_ASSIGNMENT   shift, and go to state 144

    $default  reduce using rule 30 (cast_expression)

    assignment_operator  go to state 145


State 86

   21 unary_expression: unary_operator . cast_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 146
    unary_operator      go to state 86
    cast_expression     go to state 147


State 87

   32 multiplicative_expression: cast_expression .

    $default  reduce using rule 32 (multiplicative_expression)


State 88

   33 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   34                          | multiplicative_expression . DIVIDE cast_expression
   35                          | multiplicative_expression . MODULUS cast_expression
   36 additive_expression: multiplicative_expression .

    MULTIPLY  shift, and go to state 148
    DIVIDE    shift, and go to state 149
    MODULUS   shift, and go to state 150

    $default  reduce using rule 36 (additive_expression)


State 89

   37 additive_expression: additive_expression . ADD multiplicative_expression
   38                    | additive_expression . SUBTRACT multiplicative_expression
   39 shift_expression: additive_expression .

    ADD       shift, and go to state 151
    SUBTRACT  shift, and go to state 152

    $default  reduce using rule 39 (shift_expression)


State 90

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   42 relational_expression: shift_expression .

    LEFT_SHIFT   shift, and go to state 153
    RIGHT_SHIFT  shift, and go to state 154

    $default  reduce using rule 42 (relational_expression)


State 91

   43 relational_expression: relational_expression . LESS_THAN shift_expression
   44                      | relational_expression . GREATER_THAN shift_expression
   45                      | relational_expression . LESS_THAN_OR_EQUAL_TO shift_expression
   46                      | relational_expression . GREATER_THAN_OR_EQUAL_TO shift_expression
   47 equality_expression: relational_expression .

    LESS_THAN                 shift, and go to state 155
    GREATER_THAN              shift, and go to state 156
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 157
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 158

    $default  reduce using rule 47 (equality_expression)


State 92

   48 equality_expression: equality_expression . EQUAL_TO relational_expression
   49                    | equality_expression . NOT_EQUAL_TO relational_expression
   50 AND_expression: equality_expression .

    EQUAL_TO      shift, and go to state 159
    NOT_EQUAL_TO  shift, and go to state 160

    $default  reduce using rule 50 (AND_expression)


State 93

   51 AND_expression: AND_expression . BITWISE_AND equality_expression
   52 exclusive_OR_expression: AND_expression .

    BITWISE_AND  shift, and go to state 161

    $default  reduce using rule 52 (exclusive_OR_expression)


State 94

   53 exclusive_OR_expression: exclusive_OR_expression . BITWISE_XOR AND_expression
   54 inclusive_OR_expression: exclusive_OR_expression .

    BITWISE_XOR  shift, and go to state 162

    $default  reduce using rule 54 (inclusive_OR_expression)


State 95

   55 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   56 logical_AND_expression: inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 163

    $default  reduce using rule 56 (logical_AND_expression)


State 96

   57 logical_AND_expression: logical_AND_expression . LOGICAL_AND inclusive_OR_expression
   58 logical_OR_expression: logical_AND_expression .

    LOGICAL_AND  shift, and go to state 164

    $default  reduce using rule 58 (logical_OR_expression)


State 97

   59 logical_OR_expression: logical_OR_expression . LOGICAL_OR logical_AND_expression
   60 conditional_expression: logical_OR_expression .
   61                       | logical_OR_expression . QUESTION_MARK expression COLON conditional_expression

    LOGICAL_OR     shift, and go to state 165
    QUESTION_MARK  shift, and go to state 166

    $default  reduce using rule 60 (conditional_expression)


State 98

   62 assignment_expression: conditional_expression .

    $default  reduce using rule 62 (assignment_expression)


State 99

  155 initializer: assignment_expression .

    $default  reduce using rule 155 (initializer)


State 100

   90 init_declarator: declarator ASSIGNMENT initializer .

    $default  reduce using rule 90 (init_declarator)


State 101

  176 compound_statement: CURLY_BRACKET_OPEN . block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 175
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 176
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 177
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    SEMICOLON  reduce using rule 185 (expression_opt)
    $default   reduce using rule 178 (block_item_list_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    declaration                go to state 180
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 181
    labeled_statement          go to state 182
    compound_statement         go to state 183
    block_item_list_opt        go to state 184
    block_item_list            go to state 185
    block_item                 go to state 186
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 102

  201 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 201 (function_definition)


State 103

  205 declaration_list: declaration_list declaration .

    $default  reduce using rule 205 (declaration_list)


State 104

  129 direct_declarator: ROUND_BRACKET_OPEN declarator . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 192


State 105

  130 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE
  131                  | direct_declarator SQUARE_BRACKET_OPEN . STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  132                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  133                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list_opt MULTIPLY SQUARE_BRACKET_CLOSE

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 193
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 137 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 194
    type_qualifier_list      go to state 195


State 106

  134 direct_declarator: direct_declarator ROUND_BRACKET_OPEN . parameter_type_list ROUND_BRACKET_CLOSE
  135                  | direct_declarator ROUND_BRACKET_OPEN . identifier_list_opt ROUND_BRACKET_CLOSE

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    IDENTIFIER  shift, and go to state 196

    $default  reduce using rule 141 (identifier_list_opt)

    declaration_specifiers   go to state 197
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    identifier_list_opt      go to state 198
    parameter_type_list      go to state 199
    parameter_list           go to state 200
    parameter_declaration    go to state 201
    identifier_list          go to state 202


State 107

  120 enumerator: IDENTIFIER ASSIGNMENT . constant_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 203
    constant_expression        go to state 204


State 108

  112 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 112 (enum_specifier)


State 109

  113 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA . CURLY_BRACKET_CLOSE
  118 enumerator_list: enumerator_list COMMA . enumerator

    CURLY_BRACKET_CLOSE  shift, and go to state 205
    IDENTIFIER           shift, and go to state 62

    enumerator  go to state 206


State 110

    4 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   12 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   23 unary_expression: SIZEOF ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 113
    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    enum_specifier             go to state 26
    type_qualifier             go to state 116
    type_name                  go to state 207


State 111

   22 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 112

   75 expression: assignment_expression .

    $default  reduce using rule 75 (expression)


State 113

    4 primary_expression: ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE
   76 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 208
    COMMA                shift, and go to state 209


State 114

  108 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 111 (specifier_qualifier_list_opt)

    type_specifier                go to state 114
    specifier_qualifier_list      go to state 210
    specifier_qualifier_list_opt  go to state 211
    enum_specifier                go to state 26
    type_qualifier                go to state 116


State 115

  154 type_name: specifier_qualifier_list .

    $default  reduce using rule 154 (type_name)


State 116

  109 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 111 (specifier_qualifier_list_opt)

    type_specifier                go to state 114
    specifier_qualifier_list      go to state 210
    specifier_qualifier_list_opt  go to state 212
    enum_specifier                go to state 26
    type_qualifier                go to state 116


State 117

   12 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   31 cast_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE cast_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 213


State 118

  165 designator: SQUARE_BRACKET_OPEN . constant_expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 203
    constant_expression        go to state 214


State 119

  166 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 215


State 120

  156 initializer: CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
  157            | CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE
  159 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 216
    COMMA                shift, and go to state 217


State 121

  158 initializer_list: designation_opt . initializer

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 71
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 99
    initializer                go to state 218


State 122

  160 designation_opt: designation .

    $default  reduce using rule 160 (designation_opt)


State 123

  162 designation: designator_list . ASSIGNMENT
  164 designator_list: designator_list . designator

    SQUARE_BRACKET_OPEN  shift, and go to state 118
    DOT                  shift, and go to state 119
    ASSIGNMENT           shift, and go to state 219

    designator  go to state 220


State 124

  163 designator_list: designator .

    $default  reduce using rule 163 (designator_list)


State 125

    4 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   12 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 7
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 113
    type_specifier             go to state 114
    specifier_qualifier_list   go to state 115
    enum_specifier             go to state 26
    type_qualifier             go to state 116
    type_name                  go to state 221


State 126

   19 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 19 (unary_expression)


State 127

   20 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 20 (unary_expression)


State 128

    6 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN . expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 222


State 129

    7 postfix_expression: postfix_expression ROUND_BRACKET_OPEN . argument_expression_list_opt ROUND_BRACKET_CLOSE

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 15 (argument_expression_list_opt)

    primary_expression            go to state 83
    postfix_expression            go to state 84
    argument_expression_list_opt  go to state 223
    argument_expression_list      go to state 224
    unary_expression              go to state 85
    unary_operator                go to state 86
    cast_expression               go to state 87
    multiplicative_expression     go to state 88
    additive_expression           go to state 89
    shift_expression              go to state 90
    relational_expression         go to state 91
    equality_expression           go to state 92
    AND_expression                go to state 93
    exclusive_OR_expression       go to state 94
    inclusive_OR_expression       go to state 95
    logical_AND_expression        go to state 96
    logical_OR_expression         go to state 97
    conditional_expression        go to state 98
    assignment_expression         go to state 225


State 130

    8 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 226


State 131

    9 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 227


State 132

   10 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 10 (postfix_expression)


State 133

   11 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 11 (postfix_expression)


State 134

   64 assignment_operator: ASSIGNMENT .

    $default  reduce using rule 64 (assignment_operator)


State 135

   65 assignment_operator: MULTIPLY_ASSIGNMENT .

    $default  reduce using rule 65 (assignment_operator)


State 136

   66 assignment_operator: DIVIDE_ASSIGNMENT .

    $default  reduce using rule 66 (assignment_operator)


State 137

   67 assignment_operator: MODULUS_ASSIGNMENT .

    $default  reduce using rule 67 (assignment_operator)


State 138

   68 assignment_operator: ADD_ASSIGNMENT .

    $default  reduce using rule 68 (assignment_operator)


State 139

   69 assignment_operator: SUBTRACT_ASSIGNMENT .

    $default  reduce using rule 69 (assignment_operator)


State 140

   70 assignment_operator: LEFT_SHIFT_ASSIGNMENT .

    $default  reduce using rule 70 (assignment_operator)


State 141

   71 assignment_operator: RIGHT_SHIFT_ASSIGNMENT .

    $default  reduce using rule 71 (assignment_operator)


State 142

   72 assignment_operator: BITWISE_AND_ASSIGNMENT .

    $default  reduce using rule 72 (assignment_operator)


State 143

   73 assignment_operator: BITWISE_XOR_ASSIGNMENT .

    $default  reduce using rule 73 (assignment_operator)


State 144

   74 assignment_operator: BITWISE_OR_ASSIGNMENT .

    $default  reduce using rule 74 (assignment_operator)


State 145

   63 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 228


State 146

   30 cast_expression: unary_expression .

    $default  reduce using rule 30 (cast_expression)


State 147

   21 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 21 (unary_expression)


State 148

   33 multiplicative_expression: multiplicative_expression MULTIPLY . cast_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 146
    unary_operator      go to state 86
    cast_expression     go to state 229


State 149

   34 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 146
    unary_operator      go to state 86
    cast_expression     go to state 230


State 150

   35 multiplicative_expression: multiplicative_expression MODULUS . cast_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 146
    unary_operator      go to state 86
    cast_expression     go to state 231


State 151

   37 additive_expression: additive_expression ADD . multiplicative_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 232


State 152

   38 additive_expression: additive_expression SUBTRACT . multiplicative_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 233


State 153

   40 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 234


State 154

   41 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 235


State 155

   43 relational_expression: relational_expression LESS_THAN . shift_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 236


State 156

   44 relational_expression: relational_expression GREATER_THAN . shift_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 237


State 157

   45 relational_expression: relational_expression LESS_THAN_OR_EQUAL_TO . shift_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 238


State 158

   46 relational_expression: relational_expression GREATER_THAN_OR_EQUAL_TO . shift_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 239


State 159

   48 equality_expression: equality_expression EQUAL_TO . relational_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 240


State 160

   49 equality_expression: equality_expression NOT_EQUAL_TO . relational_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 241


State 161

   51 AND_expression: AND_expression BITWISE_AND . equality_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 242


State 162

   53 exclusive_OR_expression: exclusive_OR_expression BITWISE_XOR . AND_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 243


State 163

   55 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR . exclusive_OR_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 244


State 164

   57 logical_AND_expression: logical_AND_expression LOGICAL_AND . inclusive_OR_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 245


State 165

   59 logical_OR_expression: logical_OR_expression LOGICAL_OR . logical_AND_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 246


State 166

   61 conditional_expression: logical_OR_expression QUESTION_MARK . expression COLON conditional_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 247


State 167

  195 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 248


State 168

  174 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 203
    constant_expression        go to state 249


State 169

  194 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 250


State 170

  175 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 251


State 171

  190 iteration_statement: DO . statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    RETURN              shift, and go to state 175
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 176
    WHILE               shift, and go to state 177
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    statement                  go to state 252
    labeled_statement          go to state 182
    compound_statement         go to state 183
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 172

  191 iteration_statement: FOR . ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement
  192                    | FOR . ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 253


State 173

  193 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 254


State 174

  186 selection_statement: IF . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement
  187                    | IF . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 255


State 175

  196 jump_statement: RETURN . expression_opt SEMICOLON

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    expression_opt             go to state 256


State 176

  188 selection_statement: SWITCH . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 257


State 177

  189 iteration_statement: WHILE . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 258


State 178

    1 primary_expression: IDENTIFIER .
  173 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 259

    $default  reduce using rule 1 (primary_expression)


State 179

   76 expression: expression . COMMA assignment_expression
  184 expression_opt: expression .

    COMMA  shift, and go to state 209

    $default  reduce using rule 184 (expression_opt)


State 180

  181 block_item: declaration .

    $default  reduce using rule 181 (block_item)


State 181

  182 block_item: statement .

    $default  reduce using rule 182 (block_item)


State 182

  167 statement: labeled_statement .

    $default  reduce using rule 167 (statement)


State 183

  168 statement: compound_statement .

    $default  reduce using rule 168 (statement)


State 184

  176 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 260


State 185

  177 block_item_list_opt: block_item_list .
  180 block_item_list: block_item_list . block_item

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 175
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 176
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 177
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    SEMICOLON  reduce using rule 185 (expression_opt)
    $default   reduce using rule 177 (block_item_list_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    declaration                go to state 180
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 181
    labeled_statement          go to state 182
    compound_statement         go to state 183
    block_item                 go to state 261
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 186

  179 block_item_list: block_item .

    $default  reduce using rule 179 (block_item_list)


State 187

  169 statement: expression_statement .

    $default  reduce using rule 169 (statement)


State 188

  183 expression_statement: expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 262


State 189

  170 statement: selection_statement .

    $default  reduce using rule 170 (statement)


State 190

  171 statement: iteration_statement .

    $default  reduce using rule 171 (statement)


State 191

  172 statement: jump_statement .

    $default  reduce using rule 172 (statement)


State 192

  129 direct_declarator: ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE .

    $default  reduce using rule 129 (direct_declarator)


State 193

  131 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC . type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 137 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 263
    type_qualifier_list      go to state 51


State 194

  130 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt . assignment_expression_opt SQUARE_BRACKET_CLOSE
  133                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt . MULTIPLY SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 264
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 139 (assignment_expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 265
    assignment_expression_opt  go to state 266


State 195

  132 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . STATIC assignment_expression SQUARE_BRACKET_CLOSE
  136 type_qualifier_list_opt: type_qualifier_list .
  145 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 267
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 136 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 196

  152 identifier_list: IDENTIFIER .

    $default  reduce using rule 152 (identifier_list)


State 197

  150 parameter_declaration: declaration_specifiers . declarator
  151                      | declaration_specifiers .

    MULTIPLY  shift, and go to state 34

    ROUND_BRACKET_CLOSE  reduce using rule 151 (parameter_declaration)
    COMMA                reduce using rule 151 (parameter_declaration)
    $default             reduce using rule 127 (pointer_opt)

    declarator   go to state 268
    pointer_opt  go to state 39
    pointer      go to state 40


State 198

  135 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list_opt . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 269


State 199

  134 direct_declarator: direct_declarator ROUND_BRACKET_OPEN parameter_type_list . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 270


State 200

  147 parameter_type_list: parameter_list . COMMA parameter_declaration
  149 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 271


State 201

  146 parameter_type_list: parameter_declaration .
  148 parameter_list: parameter_declaration .

    COMMA     reduce using rule 148 (parameter_list)
    $default  reduce using rule 146 (parameter_type_list)


State 202

  140 identifier_list_opt: identifier_list .
  153 identifier_list: identifier_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 272

    $default  reduce using rule 140 (identifier_list_opt)


State 203

   77 constant_expression: conditional_expression .

    $default  reduce using rule 77 (constant_expression)


State 204

  120 enumerator: IDENTIFIER ASSIGNMENT constant_expression .

    $default  reduce using rule 120 (enumerator)


State 205

  113 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 113 (enum_specifier)


State 206

  118 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 118 (enumerator_list)


State 207

   12 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   23 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 273


State 208

    4 primary_expression: ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE .

    $default  reduce using rule 4 (primary_expression)


State 209

   76 expression: expression COMMA . assignment_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 274


State 210

  110 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 110 (specifier_qualifier_list_opt)


State 211

  108 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 108 (specifier_qualifier_list)


State 212

  109 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 109 (specifier_qualifier_list)


State 213

   12 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   31 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . cast_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 275
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 146
    unary_operator      go to state 86
    cast_expression     go to state 276


State 214

  165 designator: SQUARE_BRACKET_OPEN constant_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 277


State 215

  166 designator: DOT IDENTIFIER .

    $default  reduce using rule 166 (designator)


State 216

  156 initializer: CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 156 (initializer)


State 217

  157 initializer: CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE
  159 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 118
    CURLY_BRACKET_CLOSE  shift, and go to state 278
    DOT                  shift, and go to state 119

    $default  reduce using rule 161 (designation_opt)

    designation_opt  go to state 279
    designation      go to state 122
    designator_list  go to state 123
    designator       go to state 124


State 218

  158 initializer_list: designation_opt initializer .

    $default  reduce using rule 158 (initializer_list)


State 219

  162 designation: designator_list ASSIGNMENT .

    $default  reduce using rule 162 (designation)


State 220

  164 designator_list: designator_list designator .

    $default  reduce using rule 164 (designator_list)


State 221

   12 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 280


State 222

    6 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression . SQUARE_BRACKET_CLOSE
   76 expression: expression . COMMA assignment_expression

    SQUARE_BRACKET_CLOSE  shift, and go to state 281
    COMMA                 shift, and go to state 209


State 223

    7 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 282


State 224

   14 argument_expression_list_opt: argument_expression_list .
   17 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 283

    $default  reduce using rule 14 (argument_expression_list_opt)


State 225

   16 argument_expression_list: assignment_expression .

    $default  reduce using rule 16 (argument_expression_list)


State 226

    8 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 8 (postfix_expression)


State 227

    9 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 9 (postfix_expression)


State 228

   63 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 63 (assignment_expression)


State 229

   33 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression .

    $default  reduce using rule 33 (multiplicative_expression)


State 230

   34 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 231

   35 multiplicative_expression: multiplicative_expression MODULUS cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 232

   33 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   34                          | multiplicative_expression . DIVIDE cast_expression
   35                          | multiplicative_expression . MODULUS cast_expression
   37 additive_expression: additive_expression ADD multiplicative_expression .

    MULTIPLY  shift, and go to state 148
    DIVIDE    shift, and go to state 149
    MODULUS   shift, and go to state 150

    $default  reduce using rule 37 (additive_expression)


State 233

   33 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   34                          | multiplicative_expression . DIVIDE cast_expression
   35                          | multiplicative_expression . MODULUS cast_expression
   38 additive_expression: additive_expression SUBTRACT multiplicative_expression .

    MULTIPLY  shift, and go to state 148
    DIVIDE    shift, and go to state 149
    MODULUS   shift, and go to state 150

    $default  reduce using rule 38 (additive_expression)


State 234

   37 additive_expression: additive_expression . ADD multiplicative_expression
   38                    | additive_expression . SUBTRACT multiplicative_expression
   40 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    ADD       shift, and go to state 151
    SUBTRACT  shift, and go to state 152

    $default  reduce using rule 40 (shift_expression)


State 235

   37 additive_expression: additive_expression . ADD multiplicative_expression
   38                    | additive_expression . SUBTRACT multiplicative_expression
   41 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    ADD       shift, and go to state 151
    SUBTRACT  shift, and go to state 152

    $default  reduce using rule 41 (shift_expression)


State 236

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   43 relational_expression: relational_expression LESS_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 153
    RIGHT_SHIFT  shift, and go to state 154

    $default  reduce using rule 43 (relational_expression)


State 237

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   44 relational_expression: relational_expression GREATER_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 153
    RIGHT_SHIFT  shift, and go to state 154

    $default  reduce using rule 44 (relational_expression)


State 238

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   45 relational_expression: relational_expression LESS_THAN_OR_EQUAL_TO shift_expression .

    LEFT_SHIFT   shift, and go to state 153
    RIGHT_SHIFT  shift, and go to state 154

    $default  reduce using rule 45 (relational_expression)


State 239

   40 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   41                 | shift_expression . RIGHT_SHIFT additive_expression
   46 relational_expression: relational_expression GREATER_THAN_OR_EQUAL_TO shift_expression .

    LEFT_SHIFT   shift, and go to state 153
    RIGHT_SHIFT  shift, and go to state 154

    $default  reduce using rule 46 (relational_expression)


State 240

   43 relational_expression: relational_expression . LESS_THAN shift_expression
   44                      | relational_expression . GREATER_THAN shift_expression
   45                      | relational_expression . LESS_THAN_OR_EQUAL_TO shift_expression
   46                      | relational_expression . GREATER_THAN_OR_EQUAL_TO shift_expression
   48 equality_expression: equality_expression EQUAL_TO relational_expression .

    LESS_THAN                 shift, and go to state 155
    GREATER_THAN              shift, and go to state 156
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 157
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 158

    $default  reduce using rule 48 (equality_expression)


State 241

   43 relational_expression: relational_expression . LESS_THAN shift_expression
   44                      | relational_expression . GREATER_THAN shift_expression
   45                      | relational_expression . LESS_THAN_OR_EQUAL_TO shift_expression
   46                      | relational_expression . GREATER_THAN_OR_EQUAL_TO shift_expression
   49 equality_expression: equality_expression NOT_EQUAL_TO relational_expression .

    LESS_THAN                 shift, and go to state 155
    GREATER_THAN              shift, and go to state 156
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 157
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 158

    $default  reduce using rule 49 (equality_expression)


State 242

   48 equality_expression: equality_expression . EQUAL_TO relational_expression
   49                    | equality_expression . NOT_EQUAL_TO relational_expression
   51 AND_expression: AND_expression BITWISE_AND equality_expression .

    EQUAL_TO      shift, and go to state 159
    NOT_EQUAL_TO  shift, and go to state 160

    $default  reduce using rule 51 (AND_expression)


State 243

   51 AND_expression: AND_expression . BITWISE_AND equality_expression
   53 exclusive_OR_expression: exclusive_OR_expression BITWISE_XOR AND_expression .

    BITWISE_AND  shift, and go to state 161

    $default  reduce using rule 53 (exclusive_OR_expression)


State 244

   53 exclusive_OR_expression: exclusive_OR_expression . BITWISE_XOR AND_expression
   55 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR exclusive_OR_expression .

    BITWISE_XOR  shift, and go to state 162

    $default  reduce using rule 55 (inclusive_OR_expression)


State 245

   55 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   57 logical_AND_expression: logical_AND_expression LOGICAL_AND inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 163

    $default  reduce using rule 57 (logical_AND_expression)


State 246

   57 logical_AND_expression: logical_AND_expression . LOGICAL_AND inclusive_OR_expression
   59 logical_OR_expression: logical_OR_expression LOGICAL_OR logical_AND_expression .

    LOGICAL_AND  shift, and go to state 164

    $default  reduce using rule 59 (logical_OR_expression)


State 247

   61 conditional_expression: logical_OR_expression QUESTION_MARK expression . COLON conditional_expression
   76 expression: expression . COMMA assignment_expression

    COLON  shift, and go to state 284
    COMMA  shift, and go to state 209


State 248

  195 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 195 (jump_statement)


State 249

  174 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 285


State 250

  194 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 194 (jump_statement)


State 251

  175 labeled_statement: DEFAULT COLON . statement

    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    RETURN              shift, and go to state 175
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 176
    WHILE               shift, and go to state 177
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    statement                  go to state 286
    labeled_statement          go to state 182
    compound_statement         go to state 183
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 252

  190 iteration_statement: DO statement . WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    WHILE  shift, and go to state 287


State 253

  191 iteration_statement: FOR ROUND_BRACKET_OPEN . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement
  192                    | FOR ROUND_BRACKET_OPEN . declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    AUTO                shift, and go to state 1
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    FLOAT               shift, and go to state 7
    INLINE              shift, and go to state 8
    INT                 shift, and go to state 9
    LONG                shift, and go to state 10
    REGISTER            shift, and go to state 11
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 69
    STATIC              shift, and go to state 15
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    declaration                go to state 288
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_opt             go to state 289


State 254

  193 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 290


State 255

  186 selection_statement: IF ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement
  187                    | IF ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement ELSE statement

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 291


State 256

  196 jump_statement: RETURN expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 292


State 257

  188 selection_statement: SWITCH ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 293


State 258

  189 iteration_statement: WHILE ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 294


State 259

  173 labeled_statement: IDENTIFIER COLON . statement

    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    RETURN              shift, and go to state 175
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 176
    WHILE               shift, and go to state 177
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    statement                  go to state 295
    labeled_statement          go to state 182
    compound_statement         go to state 183
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 260

  176 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE .

    $default  reduce using rule 176 (compound_statement)


State 261

  180 block_item_list: block_item_list block_item .

    $default  reduce using rule 180 (block_item_list)


State 262

  183 expression_statement: expression_opt SEMICOLON .

    $default  reduce using rule 183 (expression_statement)


State 263

  131 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt . assignment_expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 296


State 264

   25 unary_operator: MULTIPLY .
  133 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt MULTIPLY . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 297

    $default  reduce using rule 25 (unary_operator)


State 265

  138 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 138 (assignment_expression_opt)


State 266

  130 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 298


State 267

  132 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC . assignment_expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 299


State 268

  150 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 150 (parameter_declaration)


State 269

  135 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list_opt ROUND_BRACKET_CLOSE .

    $default  reduce using rule 135 (direct_declarator)


State 270

  134 direct_declarator: direct_declarator ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 134 (direct_declarator)


State 271

  147 parameter_type_list: parameter_list COMMA . parameter_declaration
  149 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    declaration_specifiers   go to state 197
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 300


State 272

  153 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 301


State 273

   12 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   23 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE .

    CURLY_BRACKET_OPEN  shift, and go to state 275

    $default  reduce using rule 23 (unary_expression)


State 274

   76 expression: expression COMMA assignment_expression .

    $default  reduce using rule 76 (expression)


State 275

   12 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 118
    DOT                  shift, and go to state 119

    $default  reduce using rule 161 (designation_opt)

    initializer_list  go to state 302
    designation_opt   go to state 121
    designation       go to state 122
    designator_list   go to state 123
    designator        go to state 124


State 276

   31 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression .

    $default  reduce using rule 31 (cast_expression)


State 277

  165 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 165 (designator)


State 278

  157 initializer: CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 157 (initializer)


State 279

  159 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 71
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 99
    initializer                go to state 303


State 280

   12 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 275


State 281

    6 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 6 (postfix_expression)


State 282

    7 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE .

    $default  reduce using rule 7 (postfix_expression)


State 283

   17 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 304


State 284

   61 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON . conditional_expression

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 305


State 285

  174 labeled_statement: CASE constant_expression COLON . statement

    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    RETURN              shift, and go to state 175
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 176
    WHILE               shift, and go to state 177
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    statement                  go to state 306
    labeled_statement          go to state 182
    compound_statement         go to state 183
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 286

  175 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 175 (labeled_statement)


State 287

  190 iteration_statement: DO statement WHILE . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 307


State 288

  192 iteration_statement: FOR ROUND_BRACKET_OPEN declaration . expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    expression_opt             go to state 308


State 289

  191 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SEMICOLON  shift, and go to state 309


State 290

  193 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 193 (jump_statement)


State 291

   76 expression: expression . COMMA assignment_expression
  186 selection_statement: IF ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement
  187                    | IF ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement ELSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 310
    COMMA                shift, and go to state 209


State 292

  196 jump_statement: RETURN expression_opt SEMICOLON .

    $default  reduce using rule 196 (jump_statement)


State 293

   76 expression: expression . COMMA assignment_expression
  188 selection_statement: SWITCH ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 311
    COMMA                shift, and go to state 209


State 294

   76 expression: expression . COMMA assignment_expression
  189 iteration_statement: WHILE ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 312
    COMMA                shift, and go to state 209


State 295

  173 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 173 (labeled_statement)


State 296

  131 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 313


State 297

  133 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt MULTIPLY SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 133 (direct_declarator)


State 298

  130 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 130 (direct_declarator)


State 299

  132 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 314


State 300

  147 parameter_type_list: parameter_list COMMA parameter_declaration .
  149 parameter_list: parameter_list COMMA parameter_declaration .

    COMMA     reduce using rule 149 (parameter_list)
    $default  reduce using rule 147 (parameter_type_list)


State 301

  153 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 153 (identifier_list)


State 302

   12 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
   13                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE
  159 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 315
    COMMA                shift, and go to state 316


State 303

  159 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 159 (initializer_list)


State 304

   17 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 17 (argument_expression_list)


State 305

   61 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON conditional_expression .

    $default  reduce using rule 61 (conditional_expression)


State 306

  174 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 174 (labeled_statement)


State 307

  190 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE SEMICOLON

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 317


State 308

  192 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt . SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SEMICOLON  shift, and go to state 318


State 309

  191 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    expression_opt             go to state 319


State 310

  186 selection_statement: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement
  187                    | IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement ELSE statement

    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    RETURN              shift, and go to state 175
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 176
    WHILE               shift, and go to state 177
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    statement                  go to state 320
    labeled_statement          go to state 182
    compound_statement         go to state 183
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 311

  188 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    RETURN              shift, and go to state 175
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 176
    WHILE               shift, and go to state 177
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    statement                  go to state 321
    labeled_statement          go to state 182
    compound_statement         go to state 183
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 312

  189 iteration_statement: WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    RETURN              shift, and go to state 175
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 176
    WHILE               shift, and go to state 177
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    statement                  go to state 322
    labeled_statement          go to state 182
    compound_statement         go to state 183
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 313

  131 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 131 (direct_declarator)


State 314

  132 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 132 (direct_declarator)


State 315

   12 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 12 (postfix_expression)


State 316

   13 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE
  159 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 118
    CURLY_BRACKET_CLOSE  shift, and go to state 323
    DOT                  shift, and go to state 119

    $default  reduce using rule 161 (designation_opt)

    designation_opt  go to state 279
    designation      go to state 122
    designator_list  go to state 123
    designator       go to state 124


State 317

   76 expression: expression . COMMA assignment_expression
  190 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_CLOSE  shift, and go to state 324
    COMMA                shift, and go to state 209


State 318

  192 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON . expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    expression_opt             go to state 325


State 319

  191 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SEMICOLON  shift, and go to state 326


State 320

  186 selection_statement: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .
  187                    | IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement . ELSE statement

    ELSE  shift, and go to state 327

    $default  reduce using rule 186 (selection_statement)


State 321

  188 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 188 (selection_statement)


State 322

  189 iteration_statement: WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 189 (iteration_statement)


State 323

   13 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 13 (postfix_expression)


State 324

  190 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 328


State 325

  192 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 329


State 326

  191 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 69
    ROUND_BRACKET_OPEN  shift, and go to state 70
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    expression_opt             go to state 330


State 327

  187 selection_statement: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE . statement

    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    RETURN              shift, and go to state 175
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 176
    WHILE               shift, and go to state 177
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    statement                  go to state 331
    labeled_statement          go to state 182
    compound_statement         go to state 183
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 328

  190 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON .

    $default  reduce using rule 190 (iteration_statement)


State 329

  192 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE . statement

    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    RETURN              shift, and go to state 175
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 176
    WHILE               shift, and go to state 177
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    statement                  go to state 332
    labeled_statement          go to state 182
    compound_statement         go to state 183
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 330

  191 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 333


State 331

  187 selection_statement: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE statement .

    $default  reduce using rule 187 (selection_statement)


State 332

  192 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 192 (iteration_statement)


State 333

  191 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE . statement

    BREAK               shift, and go to state 167
    CASE                shift, and go to state 168
    CONTINUE            shift, and go to state 169
    DEFAULT             shift, and go to state 170
    DO                  shift, and go to state 171
    FOR                 shift, and go to state 172
    GOTO                shift, and go to state 173
    IF                  shift, and go to state 174
    RETURN              shift, and go to state 175
    SIZEOF              shift, and go to state 69
    SWITCH              shift, and go to state 176
    WHILE               shift, and go to state 177
    ROUND_BRACKET_OPEN  shift, and go to state 70
    CURLY_BRACKET_OPEN  shift, and go to state 101
    INCREMENT           shift, and go to state 72
    DECREMENT           shift, and go to state 73
    BITWISE_AND         shift, and go to state 74
    MULTIPLY            shift, and go to state 75
    ADD                 shift, and go to state 76
    SUBTRACT            shift, and go to state 77
    BITWISE_NOT         shift, and go to state 78
    LOGICAL_NOT         shift, and go to state 79
    CONSTANT            shift, and go to state 80
    IDENTIFIER          shift, and go to state 178
    STRING_LITERAL      shift, and go to state 82

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 112
    expression                 go to state 179
    statement                  go to state 334
    labeled_statement          go to state 182
    compound_statement         go to state 183
    expression_statement       go to state 187
    expression_opt             go to state 188
    selection_statement        go to state 189
    iteration_statement        go to state 190
    jump_statement             go to state 191


State 334

  191 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 191 (iteration_statement)
