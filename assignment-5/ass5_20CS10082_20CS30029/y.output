Terminals unused in grammar

    STRUCT
    TYPEDEF
    UNION
    HASH


Grammar

    0 $accept: translation_unit $end

    1 constant: INTEGER_CONSTANT
    2         | FLOATING_CONSTANT
    3         | ENUMERATION_CONSTANT
    4         | CHARACTER_CONSTANT

    5 postfix_expression: primary_expression
    6                   | postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
    7                   | postfix_expression ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE
    8                   | postfix_expression ROUND_BRACKET_OPEN argument_expression_list ROUND_BRACKET_CLOSE
    9                   | postfix_expression DOT IDENTIFIER
   10                   | postfix_expression ARROW IDENTIFIER
   11                   | postfix_expression INCREMENT
   12                   | postfix_expression DECREMENT
   13                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

   15 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N
   16                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement
   17                    | SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

   18 unary_operator: BITWISE_AND
   19               | MULTIPLY
   20               | ADD
   21               | SUBTRACT
   22               | BITWISE_NOT
   23               | LOGICAL_NOT

   24 cast_expression: unary_expression
   25                | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression

   26 multiplicative_expression: cast_expression
   27                          | multiplicative_expression MULTIPLY cast_expression
   28                          | multiplicative_expression DIVIDE cast_expression
   29                          | multiplicative_expression MODULUS cast_expression

   30 additive_expression: multiplicative_expression
   31                    | additive_expression ADD multiplicative_expression
   32                    | additive_expression SUBTRACT multiplicative_expression

   33 shift_expression: additive_expression
   34                 | shift_expression LEFT_SHIFT additive_expression
   35                 | shift_expression RIGHT_SHIFT additive_expression

   36 declaration_specifiers: storage_class_specifier declaration_specifiers
   37                       | storage_class_specifier
   38                       | type_specifier declaration_specifiers
   39                       | type_specifier
   40                       | type_qualifier declaration_specifiers
   41                       | type_qualifier
   42                       | function_specifier declaration_specifiers
   43                       | function_specifier

   44 equality_expression: relational_expression
   45                    | equality_expression EQUAL_TO relational_expression
   46                    | equality_expression NOT_EQUAL_TO relational_expression

   47 AND_expression: equality_expression
   48               | AND_expression BITWISE_AND equality_expression

   49 exclusive_OR_expression: AND_expression
   50                        | exclusive_OR_expression BITWISE_XOR AND_expression

   51 inclusive_OR_expression: exclusive_OR_expression
   52                        | inclusive_OR_expression BITWISE_OR exclusive_OR_expression

   53 logical_AND_expression: inclusive_OR_expression
   54                       | logical_AND_expression N LOGICAL_AND M inclusive_OR_expression

   55 logical_OR_expression: logical_AND_expression
   56                      | logical_OR_expression N LOGICAL_OR M logical_AND_expression

   57 M: %empty

   58 N: %empty

   59 conditional_expression: logical_OR_expression
   60                       | logical_OR_expression N QUESTION_MARK M expression N COLON M conditional_expression

   61 assignment_expression: conditional_expression
   62                      | unary_expression assignment_operator assignment_expression

   63 primary_expression: IDENTIFIER
   64                   | constant
   65                   | STRING_LITERAL
   66                   | ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE

   67 assignment_operator: ASSIGNMENT
   68                    | MULTIPLY_ASSIGNMENT
   69                    | DIVIDE_ASSIGNMENT
   70                    | MODULUS_ASSIGNMENT
   71                    | ADD_ASSIGNMENT
   72                    | SUBTRACT_ASSIGNMENT
   73                    | LEFT_SHIFT_ASSIGNMENT
   74                    | RIGHT_SHIFT_ASSIGNMENT
   75                    | BITWISE_AND_ASSIGNMENT
   76                    | BITWISE_XOR_ASSIGNMENT
   77                    | BITWISE_OR_ASSIGNMENT

   78 expression: assignment_expression
   79           | expression COMMA assignment_expression

   80 constant_expression: conditional_expression

   81 declaration: declaration_specifiers init_declarator_list SEMICOLON
   82            | declaration_specifiers SEMICOLON

   83 init_declarator_list: init_declarator
   84                     | init_declarator_list COMMA init_declarator

   85 init_declarator: declarator
   86                | declarator ASSIGNMENT initializer

   87 storage_class_specifier: EXTERN
   88                        | STATIC
   89                        | AUTO
   90                        | REGISTER

   91 type_specifier: VOID
   92               | CHAR
   93               | SHORT
   94               | INT
   95               | LONG
   96               | FLOAT
   97               | DOUBLE
   98               | SIGNED
   99               | UNSIGNED
  100               | _BOOL
  101               | _COMPLEX
  102               | _IMAGINARY
  103               | enum_specifier

  104 specifier_qualifier_list: type_specifier specifier_qualifier_list
  105                         | type_specifier
  106                         | type_qualifier specifier_qualifier_list
  107                         | type_qualifier

  108 enum_specifier: ENUM IDENTIFIER CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  109               | ENUM CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  110               | ENUM IDENTIFIER CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
  111               | ENUM CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
  112               | ENUM IDENTIFIER

  113 enumerator_list: enumerator
  114                | enumerator_list COMMA enumerator

  115 enumerator: IDENTIFIER
  116           | IDENTIFIER ASSIGNMENT constant_expression

  117 type_qualifier: CONST
  118               | RESTRICT
  119               | VOLATILE

  120 function_specifier: INLINE

  121 declarator: pointer direct_declarator
  122           | direct_declarator

  123 direct_declarator: IDENTIFIER
  124                  | ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE
  125                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  126                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  127                  | direct_declarator SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  128                  | direct_declarator SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  129                  | direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  130                  | direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  131                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MULTIPLY SQUARE_BRACKET_CLOSE
  132                  | direct_declarator SQUARE_BRACKET_OPEN MULTIPLY SQUARE_BRACKET_CLOSE
  133                  | direct_declarator ROUND_BRACKET_OPEN CT parameter_type_list ROUND_BRACKET_CLOSE
  134                  | direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE
  135                  | direct_declarator ROUND_BRACKET_OPEN CT ROUND_BRACKET_CLOSE

  136 CT: %empty

  137 pointer: MULTIPLY type_qualifier_list
  138        | MULTIPLY
  139        | MULTIPLY type_qualifier_list pointer
  140        | MULTIPLY pointer

  141 type_qualifier_list: type_qualifier
  142                    | type_qualifier_list type_qualifier

  143 argument_expression_list: assignment_expression
  144                         | argument_expression_list COMMA assignment_expression

  145 relational_expression: shift_expression
  146                      | relational_expression LESS_THAN shift_expression
  147                      | relational_expression GREATER_THAN shift_expression
  148                      | relational_expression LESS_THAN_OR_EQUAL_TO shift_expression
  149                      | relational_expression GREATER_THAN_OR_EQUAL_TO shift_expression

  150 unary_expression: postfix_expression
  151                 | INCREMENT unary_expression
  152                 | DECREMENT unary_expression
  153                 | unary_operator cast_expression
  154                 | SIZEOF unary_expression
  155                 | SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

  156 parameter_type_list: parameter_list
  157                    | parameter_list COMMA ELLIPSIS

  158 parameter_list: parameter_declaration
  159               | parameter_list COMMA parameter_declaration

  160 parameter_declaration: declaration_specifiers declarator
  161                      | declaration_specifiers

  162 identifier_list: IDENTIFIER
  163                | identifier_list COMMA IDENTIFIER

  164 type_name: specifier_qualifier_list

  165 initializer: assignment_expression
  166            | CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  167            | CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

  168 initializer_list: designation initializer
  169                 | initializer
  170                 | initializer_list COMMA designation initializer
  171                 | initializer_list COMMA initializer

  172 designation: designator_list ASSIGNMENT

  173 designator_list: designator
  174                | designator_list designator

  175 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE
  176           | DOT IDENTIFIER

  177 statement: labeled_statement
  178          | compound_statement
  179          | expression_statement
  180          | selection_statement
  181          | iteration_statement
  182          | jump_statement

  183 labeled_statement: IDENTIFIER COLON statement
  184                  | CASE constant_expression COLON statement
  185                  | DEFAULT COLON statement

  186 compound_statement: CURLY_BRACKET_OPEN block_item_list CURLY_BRACKET_CLOSE
  187                   | CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE

  188 block_item_list: block_item
  189                | block_item_list M block_item

  190 block_item: declaration
  191           | statement

  192 expression_statement: expression SEMICOLON
  193                     | SEMICOLON

  194 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement
  195                    | DO M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  196                    | FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement
  197                    | FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

  198 jump_statement: GOTO IDENTIFIER SEMICOLON
  199               | CONTINUE SEMICOLON
  200               | BREAK SEMICOLON
  201               | RETURN expression SEMICOLON
  202               | RETURN SEMICOLON

  203 translation_unit: external_declaration
  204                 | translation_unit external_declaration

  205 external_declaration: function_definition
  206                     | declaration

  207 function_definition: declaration_specifiers declarator declaration_list CT compound_statement
  208                    | declaration_specifiers declarator CT compound_statement

  209 declaration_list: declaration
  210                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AUTO (258) 89
    BREAK (259) 200
    CASE (260) 184
    CHAR (261) 92
    CONST (262) 117
    CONTINUE (263) 199
    DEFAULT (264) 185
    DO (265) 195
    DOUBLE (266) 97
    ELSE (267) 16
    ENUM (268) 108 109 110 111 112
    EXTERN (269) 87
    FLOAT (270) 96
    FOR (271) 196 197
    GOTO (272) 198
    IF (273) 15 16
    INLINE (274) 120
    INT (275) 94
    LONG (276) 95
    REGISTER (277) 90
    RESTRICT (278) 118
    RETURN (279) 201 202
    SHORT (280) 93
    SIGNED (281) 98
    SIZEOF (282) 154 155
    STATIC (283) 88 129 130
    STRUCT (284)
    SWITCH (285) 17
    TYPEDEF (286)
    UNION (287)
    UNSIGNED (288) 99
    VOID (289) 91
    VOLATILE (290) 119
    WHILE (291) 194 195
    _BOOL (292) 100
    _COMPLEX (293) 101
    _IMAGINARY (294) 102
    SQUARE_BRACKET_OPEN (295) 6 125 126 127 128 129 130 131 132 175
    SQUARE_BRACKET_CLOSE (296) 6 125 126 127 128 129 130 131 132 175
    ROUND_BRACKET_OPEN (297) 7 8 13 14 15 16 17 25 66 124 133 134 135 155 194 195 196 197
    ROUND_BRACKET_CLOSE (298) 7 8 13 14 15 16 17 25 66 124 133 134 135 155 194 195 196 197
    CURLY_BRACKET_OPEN (299) 13 14 108 109 110 111 166 167 186 187
    CURLY_BRACKET_CLOSE (300) 13 14 108 109 110 111 166 167 186 187
    DOT (301) 9 176
    ARROW (302) 10
    INCREMENT (303) 11 151
    DECREMENT (304) 12 152
    BITWISE_AND (305) 18 48
    MULTIPLY (306) 19 27 131 132 137 138 139 140
    ADD (307) 20 31
    SUBTRACT (308) 21 32
    BITWISE_NOT (309) 22
    LOGICAL_NOT (310) 23
    DIVIDE (311) 28
    MODULUS (312) 29
    LEFT_SHIFT (313) 34
    RIGHT_SHIFT (314) 35
    LESS_THAN (315) 146
    GREATER_THAN (316) 147
    LESS_THAN_OR_EQUAL_TO (317) 148
    GREATER_THAN_OR_EQUAL_TO (318) 149
    EQUAL_TO (319) 45
    NOT_EQUAL_TO (320) 46
    BITWISE_XOR (321) 50
    BITWISE_OR (322) 52
    LOGICAL_AND (323) 54
    LOGICAL_OR (324) 56
    QUESTION_MARK (325) 60
    COLON (326) 60 183 184 185
    SEMICOLON (327) 81 82 192 193 195 198 199 200 201 202
    ELLIPSIS (328) 157
    ASSIGNMENT (329) 67 86 116 172
    MULTIPLY_ASSIGNMENT (330) 68
    DIVIDE_ASSIGNMENT (331) 69
    MODULUS_ASSIGNMENT (332) 70
    ADD_ASSIGNMENT (333) 71
    SUBTRACT_ASSIGNMENT (334) 72
    LEFT_SHIFT_ASSIGNMENT (335) 73
    RIGHT_SHIFT_ASSIGNMENT (336) 74
    BITWISE_AND_ASSIGNMENT (337) 75
    BITWISE_XOR_ASSIGNMENT (338) 76
    BITWISE_OR_ASSIGNMENT (339) 77
    COMMA (340) 14 79 84 110 111 114 144 157 159 163 167 170 171
    HASH (341)
    IDENTIFIER <symp> (342) 9 10 63 108 110 112 115 116 123 162 163 176 183 198
    STRING_LITERAL <charval> (343) 65
    CHARACTER_CONSTANT <charval> (344) 4
    ENUMERATION_CONSTANT <charval> (345) 3
    FLOATING_CONSTANT <charval> (346) 2
    INTEGER_CONSTANT <intval> (347) 1
    THEN (348)


Nonterminals, with rules where they appear

    $accept (94)
        on left: 0
    constant <symp> (95)
        on left: 1 2 3 4
        on right: 64
    postfix_expression <A> (96)
        on left: 5 6 7 8 9 10 11 12 13 14
        on right: 6 7 8 9 10 11 12 150
    selection_statement <S> (97)
        on left: 15 16 17
        on right: 180
    unary_operator <unary_operator> (98)
        on left: 18 19 20 21 22 23
        on right: 153
    cast_expression <A> (99)
        on left: 24 25
        on right: 25 26 27 28 29 153
    multiplicative_expression <E> (100)
        on left: 26 27 28 29
        on right: 27 28 29 30 31 32
    additive_expression <E> (101)
        on left: 30 31 32
        on right: 31 32 33 34 35
    shift_expression <E> (102)
        on left: 33 34 35
        on right: 34 35 145 146 147 148 149
    declaration_specifiers (103)
        on left: 36 37 38 39 40 41 42 43
        on right: 36 38 40 42 81 82 160 161 207 208
    equality_expression <E> (104)
        on left: 44 45 46
        on right: 45 46 47 48
    AND_expression <E> (105)
        on left: 47 48
        on right: 48 49 50
    exclusive_OR_expression <E> (106)
        on left: 49 50
        on right: 50 51 52
    inclusive_OR_expression <E> (107)
        on left: 51 52
        on right: 52 53 54
    logical_AND_expression <E> (108)
        on left: 53 54
        on right: 54 55 56
    logical_OR_expression <E> (109)
        on left: 55 56
        on right: 56 59 60
    M <instr> (110)
        on left: 57
        on right: 15 16 54 56 60 189 194 195 196 197
    N <S> (111)
        on left: 58
        on right: 15 16 54 56 60 197
    conditional_expression <E> (112)
        on left: 59 60
        on right: 60 61 80
    assignment_expression <E> (113)
        on left: 61 62
        on right: 62 78 79 125 127 129 130 143 144 165
    primary_expression <E> (114)
        on left: 63 64 65 66
        on right: 5
    assignment_operator (115)
        on left: 67 68 69 70 71 72 73 74 75 76 77
        on right: 62
    expression <E> (116)
        on left: 78 79
        on right: 6 15 16 17 60 66 79 192 194 195 197 201
    constant_expression (117)
        on left: 80
        on right: 116 175 184
    declaration (118)
        on left: 81 82
        on right: 190 206 209 210
    init_declarator_list (119)
        on left: 83 84
        on right: 81 84
    init_declarator <symp> (120)
        on left: 85 86
        on right: 83 84
    storage_class_specifier (121)
        on left: 87 88 89 90
        on right: 36 37
    type_specifier (122)
        on left: 91 92 93 94 95 96 97 98 99 100 101 102 103
        on right: 38 39 104 105
    specifier_qualifier_list (123)
        on left: 104 105 106 107
        on right: 104 106 164
    enum_specifier (124)
        on left: 108 109 110 111 112
        on right: 103
    enumerator_list (125)
        on left: 113 114
        on right: 108 109 110 111 114
    enumerator (126)
        on left: 115 116
        on right: 113 114
    type_qualifier (127)
        on left: 117 118 119
        on right: 40 41 106 107 141 142
    function_specifier (128)
        on left: 120
        on right: 42 43
    declarator <symp> (129)
        on left: 121 122
        on right: 85 86 124 160 207 208
    direct_declarator <symp> (130)
        on left: 123 124 125 126 127 128 129 130 131 132 133 134 135
        on right: 121 122 125 126 127 128 129 130 131 132 133 134 135
    CT (131)
        on left: 136
        on right: 133 135 207 208
    pointer <symtp> (132)
        on left: 137 138 139 140
        on right: 121 139 140
    type_qualifier_list (133)
        on left: 141 142
        on right: 125 126 129 131 137 139 142
    argument_expression_list <intval> (134)
        on left: 143 144
        on right: 8 144
    relational_expression <E> (135)
        on left: 145 146 147 148 149
        on right: 44 45 46 146 147 148 149
    unary_expression <A> (136)
        on left: 150 151 152 153 154 155
        on right: 24 62 151 152 154
    parameter_type_list (137)
        on left: 156 157
        on right: 133
    parameter_list (138)
        on left: 158 159
        on right: 156 157 159
    parameter_declaration (139)
        on left: 160 161
        on right: 158 159
    identifier_list (140)
        on left: 162 163
        on right: 134 163
    type_name (141)
        on left: 164
        on right: 13 14 25 155
    initializer <symp> (142)
        on left: 165 166 167
        on right: 86 168 169 170 171
    initializer_list (143)
        on left: 168 169 170 171
        on right: 13 14 166 167 170 171
    designation (144)
        on left: 172
        on right: 168 170
    designator_list (145)
        on left: 173 174
        on right: 172 174
    designator (146)
        on left: 175 176
        on right: 173 174
    statement <S> (147)
        on left: 177 178 179 180 181 182
        on right: 15 16 17 183 184 185 191 194 195 196 197
    labeled_statement <S> (148)
        on left: 183 184 185
        on right: 177
    compound_statement <S> (149)
        on left: 186 187
        on right: 178 207 208
    block_item_list <S> (150)
        on left: 188 189
        on right: 186 189
    block_item <S> (151)
        on left: 190 191
        on right: 188 189
    expression_statement <E> (152)
        on left: 192 193
        on right: 179 196 197
    iteration_statement <S> (153)
        on left: 194 195 196 197
        on right: 181
    jump_statement <S> (154)
        on left: 198 199 200 201 202
        on right: 182
    translation_unit (155)
        on left: 203 204
        on right: 0 204
    external_declaration (156)
        on left: 205 206
        on right: 203 204
    function_definition (157)
        on left: 207 208
        on right: 205
    declaration_list (158)
        on left: 209 210
        on right: 207 210


State 0

    0 $accept: . translation_unit $end

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    declaration_specifiers   go to state 22
    declaration              go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

   89 storage_class_specifier: AUTO .

    $default  reduce using rule 89 (storage_class_specifier)


State 2

   92 type_specifier: CHAR .

    $default  reduce using rule 92 (type_specifier)


State 3

  117 type_qualifier: CONST .

    $default  reduce using rule 117 (type_qualifier)


State 4

   97 type_specifier: DOUBLE .

    $default  reduce using rule 97 (type_specifier)


State 5

  108 enum_specifier: ENUM . IDENTIFIER CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  109               | ENUM . CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  110               | ENUM . IDENTIFIER CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
  111               | ENUM . CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
  112               | ENUM . IDENTIFIER

    CURLY_BRACKET_OPEN  shift, and go to state 32
    IDENTIFIER          shift, and go to state 33


State 6

   87 storage_class_specifier: EXTERN .

    $default  reduce using rule 87 (storage_class_specifier)


State 7

   96 type_specifier: FLOAT .

    $default  reduce using rule 96 (type_specifier)


State 8

  120 function_specifier: INLINE .

    $default  reduce using rule 120 (function_specifier)


State 9

   94 type_specifier: INT .

    $default  reduce using rule 94 (type_specifier)


State 10

   95 type_specifier: LONG .

    $default  reduce using rule 95 (type_specifier)


State 11

   90 storage_class_specifier: REGISTER .

    $default  reduce using rule 90 (storage_class_specifier)


State 12

  118 type_qualifier: RESTRICT .

    $default  reduce using rule 118 (type_qualifier)


State 13

   93 type_specifier: SHORT .

    $default  reduce using rule 93 (type_specifier)


State 14

   98 type_specifier: SIGNED .

    $default  reduce using rule 98 (type_specifier)


State 15

   88 storage_class_specifier: STATIC .

    $default  reduce using rule 88 (storage_class_specifier)


State 16

   99 type_specifier: UNSIGNED .

    $default  reduce using rule 99 (type_specifier)


State 17

   91 type_specifier: VOID .

    $default  reduce using rule 91 (type_specifier)


State 18

  119 type_qualifier: VOLATILE .

    $default  reduce using rule 119 (type_qualifier)


State 19

  100 type_specifier: _BOOL .

    $default  reduce using rule 100 (type_specifier)


State 20

  101 type_specifier: _COMPLEX .

    $default  reduce using rule 101 (type_specifier)


State 21

  102 type_specifier: _IMAGINARY .

    $default  reduce using rule 102 (type_specifier)


State 22

   81 declaration: declaration_specifiers . init_declarator_list SEMICOLON
   82            | declaration_specifiers . SEMICOLON
  207 function_definition: declaration_specifiers . declarator declaration_list CT compound_statement
  208                    | declaration_specifiers . declarator CT compound_statement

    ROUND_BRACKET_OPEN  shift, and go to state 34
    MULTIPLY            shift, and go to state 35
    SEMICOLON           shift, and go to state 36
    IDENTIFIER          shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 40
    direct_declarator     go to state 41
    pointer               go to state 42


State 23

  206 external_declaration: declaration .

    $default  reduce using rule 206 (external_declaration)


State 24

   36 declaration_specifiers: storage_class_specifier . declaration_specifiers
   37                       | storage_class_specifier .

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 37 (declaration_specifiers)

    declaration_specifiers   go to state 43
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 25

   38 declaration_specifiers: type_specifier . declaration_specifiers
   39                       | type_specifier .

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 39 (declaration_specifiers)

    declaration_specifiers   go to state 44
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 26

  103 type_specifier: enum_specifier .

    $default  reduce using rule 103 (type_specifier)


State 27

   40 declaration_specifiers: type_qualifier . declaration_specifiers
   41                       | type_qualifier .

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 41 (declaration_specifiers)

    declaration_specifiers   go to state 45
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 28

   42 declaration_specifiers: function_specifier . declaration_specifiers
   43                       | function_specifier .

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 43 (declaration_specifiers)

    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 29

    0 $accept: translation_unit . $end
  204 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 47
    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    declaration_specifiers   go to state 22
    declaration              go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 48
    function_definition      go to state 31


State 30

  203 translation_unit: external_declaration .

    $default  reduce using rule 203 (translation_unit)


State 31

  205 external_declaration: function_definition .

    $default  reduce using rule 205 (external_declaration)


State 32

  109 enum_specifier: ENUM CURLY_BRACKET_OPEN . enumerator_list CURLY_BRACKET_CLOSE
  111               | ENUM CURLY_BRACKET_OPEN . enumerator_list COMMA CURLY_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 49

    enumerator_list  go to state 50
    enumerator       go to state 51


State 33

  108 enum_specifier: ENUM IDENTIFIER . CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  110               | ENUM IDENTIFIER . CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
  112               | ENUM IDENTIFIER .

    CURLY_BRACKET_OPEN  shift, and go to state 52

    $default  reduce using rule 112 (enum_specifier)


State 34

  124 direct_declarator: ROUND_BRACKET_OPEN . declarator ROUND_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 34
    MULTIPLY            shift, and go to state 35
    IDENTIFIER          shift, and go to state 37

    declarator         go to state 53
    direct_declarator  go to state 41
    pointer            go to state 42


State 35

  137 pointer: MULTIPLY . type_qualifier_list
  138        | MULTIPLY .
  139        | MULTIPLY . type_qualifier_list pointer
  140        | MULTIPLY . pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18
    MULTIPLY  shift, and go to state 35

    $default  reduce using rule 138 (pointer)

    type_qualifier       go to state 54
    pointer              go to state 55
    type_qualifier_list  go to state 56


State 36

   82 declaration: declaration_specifiers SEMICOLON .

    $default  reduce using rule 82 (declaration)


State 37

  123 direct_declarator: IDENTIFIER .

    $default  reduce using rule 123 (direct_declarator)


State 38

   81 declaration: declaration_specifiers init_declarator_list . SEMICOLON
   84 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMICOLON  shift, and go to state 57
    COMMA      shift, and go to state 58


State 39

   83 init_declarator_list: init_declarator .

    $default  reduce using rule 83 (init_declarator_list)


State 40

   85 init_declarator: declarator .
   86                | declarator . ASSIGNMENT initializer
  207 function_definition: declaration_specifiers declarator . declaration_list CT compound_statement
  208                    | declaration_specifiers declarator . CT compound_statement

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    ASSIGNMENT  shift, and go to state 59

    CURLY_BRACKET_OPEN  reduce using rule 136 (CT)
    $default            reduce using rule 85 (init_declarator)

    declaration_specifiers   go to state 60
    declaration              go to state 61
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    CT                       go to state 62
    declaration_list         go to state 63


State 41

  122 declarator: direct_declarator .
  125 direct_declarator: direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  126                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  127                  | direct_declarator . SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  128                  | direct_declarator . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  129                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  130                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  131                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list MULTIPLY SQUARE_BRACKET_CLOSE
  132                  | direct_declarator . SQUARE_BRACKET_OPEN MULTIPLY SQUARE_BRACKET_CLOSE
  133                  | direct_declarator . ROUND_BRACKET_OPEN CT parameter_type_list ROUND_BRACKET_CLOSE
  134                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE
  135                  | direct_declarator . ROUND_BRACKET_OPEN CT ROUND_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 64
    ROUND_BRACKET_OPEN   shift, and go to state 65

    $default  reduce using rule 122 (declarator)


State 42

  121 declarator: pointer . direct_declarator

    ROUND_BRACKET_OPEN  shift, and go to state 34
    IDENTIFIER          shift, and go to state 37

    direct_declarator  go to state 66


State 43

   36 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 36 (declaration_specifiers)


State 44

   38 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 38 (declaration_specifiers)


State 45

   40 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 40 (declaration_specifiers)


State 46

   42 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 42 (declaration_specifiers)


State 47

    0 $accept: translation_unit $end .

    $default  accept


State 48

  204 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 204 (translation_unit)


State 49

  115 enumerator: IDENTIFIER .
  116           | IDENTIFIER . ASSIGNMENT constant_expression

    ASSIGNMENT  shift, and go to state 67

    $default  reduce using rule 115 (enumerator)


State 50

  109 enum_specifier: ENUM CURLY_BRACKET_OPEN enumerator_list . CURLY_BRACKET_CLOSE
  111               | ENUM CURLY_BRACKET_OPEN enumerator_list . COMMA CURLY_BRACKET_CLOSE
  114 enumerator_list: enumerator_list . COMMA enumerator

    CURLY_BRACKET_CLOSE  shift, and go to state 68
    COMMA                shift, and go to state 69


State 51

  113 enumerator_list: enumerator .

    $default  reduce using rule 113 (enumerator_list)


State 52

  108 enum_specifier: ENUM IDENTIFIER CURLY_BRACKET_OPEN . enumerator_list CURLY_BRACKET_CLOSE
  110               | ENUM IDENTIFIER CURLY_BRACKET_OPEN . enumerator_list COMMA CURLY_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 49

    enumerator_list  go to state 70
    enumerator       go to state 51


State 53

  124 direct_declarator: ROUND_BRACKET_OPEN declarator . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 71


State 54

  141 type_qualifier_list: type_qualifier .

    $default  reduce using rule 141 (type_qualifier_list)


State 55

  140 pointer: MULTIPLY pointer .

    $default  reduce using rule 140 (pointer)


State 56

  137 pointer: MULTIPLY type_qualifier_list .
  139        | MULTIPLY type_qualifier_list . pointer
  142 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18
    MULTIPLY  shift, and go to state 35

    $default  reduce using rule 137 (pointer)

    type_qualifier  go to state 72
    pointer         go to state 73


State 57

   81 declaration: declaration_specifiers init_declarator_list SEMICOLON .

    $default  reduce using rule 81 (declaration)


State 58

   84 init_declarator_list: init_declarator_list COMMA . init_declarator

    ROUND_BRACKET_OPEN  shift, and go to state 34
    MULTIPLY            shift, and go to state 35
    IDENTIFIER          shift, and go to state 37

    init_declarator    go to state 74
    declarator         go to state 75
    direct_declarator  go to state 41
    pointer            go to state 42


State 59

   86 init_declarator: declarator ASSIGNMENT . initializer

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 78
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 107
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 110
    initializer                go to state 111


State 60

   81 declaration: declaration_specifiers . init_declarator_list SEMICOLON
   82            | declaration_specifiers . SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 34
    MULTIPLY            shift, and go to state 35
    SEMICOLON           shift, and go to state 36
    IDENTIFIER          shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 75
    direct_declarator     go to state 41
    pointer               go to state 42


State 61

  209 declaration_list: declaration .

    $default  reduce using rule 209 (declaration_list)


State 62

  208 function_definition: declaration_specifiers declarator CT . compound_statement

    CURLY_BRACKET_OPEN  shift, and go to state 112

    compound_statement  go to state 113


State 63

  207 function_definition: declaration_specifiers declarator declaration_list . CT compound_statement
  210 declaration_list: declaration_list . declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 136 (CT)

    declaration_specifiers   go to state 60
    declaration              go to state 114
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    CT                       go to state 115


State 64

  125 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  126                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list SQUARE_BRACKET_CLOSE
  127                  | direct_declarator SQUARE_BRACKET_OPEN . assignment_expression SQUARE_BRACKET_CLOSE
  128                  | direct_declarator SQUARE_BRACKET_OPEN . SQUARE_BRACKET_CLOSE
  129                  | direct_declarator SQUARE_BRACKET_OPEN . STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  130                  | direct_declarator SQUARE_BRACKET_OPEN . STATIC assignment_expression SQUARE_BRACKET_CLOSE
  131                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list MULTIPLY SQUARE_BRACKET_CLOSE
  132                  | direct_declarator SQUARE_BRACKET_OPEN . MULTIPLY SQUARE_BRACKET_CLOSE

    CONST                 shift, and go to state 3
    RESTRICT              shift, and go to state 12
    SIZEOF                shift, and go to state 76
    STATIC                shift, and go to state 116
    VOLATILE              shift, and go to state 18
    SQUARE_BRACKET_CLOSE  shift, and go to state 117
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 118
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 119
    primary_expression         go to state 108
    type_qualifier             go to state 54
    type_qualifier_list        go to state 120
    relational_expression      go to state 109
    unary_expression           go to state 110


State 65

  133 direct_declarator: direct_declarator ROUND_BRACKET_OPEN . CT parameter_type_list ROUND_BRACKET_CLOSE
  134                  | direct_declarator ROUND_BRACKET_OPEN . identifier_list ROUND_BRACKET_CLOSE
  135                  | direct_declarator ROUND_BRACKET_OPEN . CT ROUND_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 121

    $default  reduce using rule 136 (CT)

    CT               go to state 122
    identifier_list  go to state 123


State 66

  121 declarator: pointer direct_declarator .
  125 direct_declarator: direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  126                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE
  127                  | direct_declarator . SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE
  128                  | direct_declarator . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
  129                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  130                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE
  131                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list MULTIPLY SQUARE_BRACKET_CLOSE
  132                  | direct_declarator . SQUARE_BRACKET_OPEN MULTIPLY SQUARE_BRACKET_CLOSE
  133                  | direct_declarator . ROUND_BRACKET_OPEN CT parameter_type_list ROUND_BRACKET_CLOSE
  134                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE
  135                  | direct_declarator . ROUND_BRACKET_OPEN CT ROUND_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 64
    ROUND_BRACKET_OPEN   shift, and go to state 65

    $default  reduce using rule 121 (declarator)


State 67

  116 enumerator: IDENTIFIER ASSIGNMENT . constant_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 124
    primary_expression         go to state 108
    constant_expression        go to state 125
    relational_expression      go to state 109
    unary_expression           go to state 126


State 68

  109 enum_specifier: ENUM CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 109 (enum_specifier)


State 69

  111 enum_specifier: ENUM CURLY_BRACKET_OPEN enumerator_list COMMA . CURLY_BRACKET_CLOSE
  114 enumerator_list: enumerator_list COMMA . enumerator

    CURLY_BRACKET_CLOSE  shift, and go to state 127
    IDENTIFIER           shift, and go to state 49

    enumerator  go to state 128


State 70

  108 enum_specifier: ENUM IDENTIFIER CURLY_BRACKET_OPEN enumerator_list . CURLY_BRACKET_CLOSE
  110               | ENUM IDENTIFIER CURLY_BRACKET_OPEN enumerator_list . COMMA CURLY_BRACKET_CLOSE
  114 enumerator_list: enumerator_list . COMMA enumerator

    CURLY_BRACKET_CLOSE  shift, and go to state 129
    COMMA                shift, and go to state 130


State 71

  124 direct_declarator: ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE .

    $default  reduce using rule 124 (direct_declarator)


State 72

  142 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 142 (type_qualifier_list)


State 73

  139 pointer: MULTIPLY type_qualifier_list pointer .

    $default  reduce using rule 139 (pointer)


State 74

   84 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 84 (init_declarator_list)


State 75

   85 init_declarator: declarator .
   86                | declarator . ASSIGNMENT initializer

    ASSIGNMENT  shift, and go to state 59

    $default  reduce using rule 85 (init_declarator)


State 76

  154 unary_expression: SIZEOF . unary_expression
  155                 | SIZEOF . ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 131
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant            go to state 93
    postfix_expression  go to state 94
    unary_operator      go to state 95
    primary_expression  go to state 108
    unary_expression    go to state 132


State 77

   13 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   25 cast_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE cast_expression
   66 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE

    CHAR                  shift, and go to state 2
    CONST                 shift, and go to state 3
    DOUBLE                shift, and go to state 4
    ENUM                  shift, and go to state 5
    FLOAT                 shift, and go to state 7
    INT                   shift, and go to state 9
    LONG                  shift, and go to state 10
    RESTRICT              shift, and go to state 12
    SHORT                 shift, and go to state 13
    SIGNED                shift, and go to state 14
    SIZEOF                shift, and go to state 76
    UNSIGNED              shift, and go to state 16
    VOID                  shift, and go to state 17
    VOLATILE              shift, and go to state 18
    _BOOL                 shift, and go to state 19
    _COMPLEX              shift, and go to state 20
    _IMAGINARY            shift, and go to state 21
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 134
    type_specifier             go to state 135
    specifier_qualifier_list   go to state 136
    enum_specifier             go to state 26
    type_qualifier             go to state 137
    relational_expression      go to state 109
    unary_expression           go to state 110
    type_name                  go to state 138


State 78

  166 initializer: CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
  167            | CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SIZEOF                shift, and go to state 76
    SQUARE_BRACKET_OPEN   shift, and go to state 139
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 78
    DOT                   shift, and go to state 140
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 107
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 110
    initializer                go to state 141
    initializer_list           go to state 142
    designation                go to state 143
    designator_list            go to state 144
    designator                 go to state 145


State 79

  151 unary_expression: INCREMENT . unary_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 146
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant            go to state 93
    postfix_expression  go to state 94
    unary_operator      go to state 95
    primary_expression  go to state 108
    unary_expression    go to state 147


State 80

  152 unary_expression: DECREMENT . unary_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 146
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant            go to state 93
    postfix_expression  go to state 94
    unary_operator      go to state 95
    primary_expression  go to state 108
    unary_expression    go to state 148


State 81

   18 unary_operator: BITWISE_AND .

    $default  reduce using rule 18 (unary_operator)


State 82

   19 unary_operator: MULTIPLY .

    $default  reduce using rule 19 (unary_operator)


State 83

   20 unary_operator: ADD .

    $default  reduce using rule 20 (unary_operator)


State 84

   21 unary_operator: SUBTRACT .

    $default  reduce using rule 21 (unary_operator)


State 85

   22 unary_operator: BITWISE_NOT .

    $default  reduce using rule 22 (unary_operator)


State 86

   23 unary_operator: LOGICAL_NOT .

    $default  reduce using rule 23 (unary_operator)


State 87

   63 primary_expression: IDENTIFIER .

    $default  reduce using rule 63 (primary_expression)


State 88

   65 primary_expression: STRING_LITERAL .

    $default  reduce using rule 65 (primary_expression)


State 89

    4 constant: CHARACTER_CONSTANT .

    $default  reduce using rule 4 (constant)


State 90

    3 constant: ENUMERATION_CONSTANT .

    $default  reduce using rule 3 (constant)


State 91

    2 constant: FLOATING_CONSTANT .

    $default  reduce using rule 2 (constant)


State 92

    1 constant: INTEGER_CONSTANT .

    $default  reduce using rule 1 (constant)


State 93

   64 primary_expression: constant .

    $default  reduce using rule 64 (primary_expression)


State 94

    6 postfix_expression: postfix_expression . SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
    7                   | postfix_expression . ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE
    8                   | postfix_expression . ROUND_BRACKET_OPEN argument_expression_list ROUND_BRACKET_CLOSE
    9                   | postfix_expression . DOT IDENTIFIER
   10                   | postfix_expression . ARROW IDENTIFIER
   11                   | postfix_expression . INCREMENT
   12                   | postfix_expression . DECREMENT
  150 unary_expression: postfix_expression .

    SQUARE_BRACKET_OPEN  shift, and go to state 149
    ROUND_BRACKET_OPEN   shift, and go to state 150
    DOT                  shift, and go to state 151
    ARROW                shift, and go to state 152
    INCREMENT            shift, and go to state 153
    DECREMENT            shift, and go to state 154

    $default  reduce using rule 150 (unary_expression)


State 95

  153 unary_expression: unary_operator . cast_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant            go to state 93
    postfix_expression  go to state 94
    unary_operator      go to state 95
    cast_expression     go to state 155
    primary_expression  go to state 108
    unary_expression    go to state 126


State 96

   26 multiplicative_expression: cast_expression .

    $default  reduce using rule 26 (multiplicative_expression)


State 97

   27 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   28                          | multiplicative_expression . DIVIDE cast_expression
   29                          | multiplicative_expression . MODULUS cast_expression
   30 additive_expression: multiplicative_expression .

    MULTIPLY  shift, and go to state 156
    DIVIDE    shift, and go to state 157
    MODULUS   shift, and go to state 158

    $default  reduce using rule 30 (additive_expression)


State 98

   31 additive_expression: additive_expression . ADD multiplicative_expression
   32                    | additive_expression . SUBTRACT multiplicative_expression
   33 shift_expression: additive_expression .

    ADD       shift, and go to state 159
    SUBTRACT  shift, and go to state 160

    $default  reduce using rule 33 (shift_expression)


State 99

   34 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   35                 | shift_expression . RIGHT_SHIFT additive_expression
  145 relational_expression: shift_expression .

    LEFT_SHIFT   shift, and go to state 161
    RIGHT_SHIFT  shift, and go to state 162

    $default  reduce using rule 145 (relational_expression)


State 100

   45 equality_expression: equality_expression . EQUAL_TO relational_expression
   46                    | equality_expression . NOT_EQUAL_TO relational_expression
   47 AND_expression: equality_expression .

    EQUAL_TO      shift, and go to state 163
    NOT_EQUAL_TO  shift, and go to state 164

    $default  reduce using rule 47 (AND_expression)


State 101

   48 AND_expression: AND_expression . BITWISE_AND equality_expression
   49 exclusive_OR_expression: AND_expression .

    BITWISE_AND  shift, and go to state 165

    $default  reduce using rule 49 (exclusive_OR_expression)


State 102

   50 exclusive_OR_expression: exclusive_OR_expression . BITWISE_XOR AND_expression
   51 inclusive_OR_expression: exclusive_OR_expression .

    BITWISE_XOR  shift, and go to state 166

    $default  reduce using rule 51 (inclusive_OR_expression)


State 103

   52 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   53 logical_AND_expression: inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 167

    $default  reduce using rule 53 (logical_AND_expression)


State 104

   54 logical_AND_expression: logical_AND_expression . N LOGICAL_AND M inclusive_OR_expression
   55 logical_OR_expression: logical_AND_expression .

    LOGICAL_AND  reduce using rule 58 (N)
    $default     reduce using rule 55 (logical_OR_expression)

    N  go to state 168


State 105

   56 logical_OR_expression: logical_OR_expression . N LOGICAL_OR M logical_AND_expression
   59 conditional_expression: logical_OR_expression .
   60                       | logical_OR_expression . N QUESTION_MARK M expression N COLON M conditional_expression

    LOGICAL_OR     reduce using rule 58 (N)
    QUESTION_MARK  reduce using rule 58 (N)
    $default       reduce using rule 59 (conditional_expression)

    N  go to state 169


State 106

   61 assignment_expression: conditional_expression .

    $default  reduce using rule 61 (assignment_expression)


State 107

  165 initializer: assignment_expression .

    $default  reduce using rule 165 (initializer)


State 108

    5 postfix_expression: primary_expression .

    $default  reduce using rule 5 (postfix_expression)


State 109

   44 equality_expression: relational_expression .
  146 relational_expression: relational_expression . LESS_THAN shift_expression
  147                      | relational_expression . GREATER_THAN shift_expression
  148                      | relational_expression . LESS_THAN_OR_EQUAL_TO shift_expression
  149                      | relational_expression . GREATER_THAN_OR_EQUAL_TO shift_expression

    LESS_THAN                 shift, and go to state 170
    GREATER_THAN              shift, and go to state 171
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 172
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 173

    $default  reduce using rule 44 (equality_expression)


State 110

   24 cast_expression: unary_expression .
   62 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGNMENT              shift, and go to state 174
    MULTIPLY_ASSIGNMENT     shift, and go to state 175
    DIVIDE_ASSIGNMENT       shift, and go to state 176
    MODULUS_ASSIGNMENT      shift, and go to state 177
    ADD_ASSIGNMENT          shift, and go to state 178
    SUBTRACT_ASSIGNMENT     shift, and go to state 179
    LEFT_SHIFT_ASSIGNMENT   shift, and go to state 180
    RIGHT_SHIFT_ASSIGNMENT  shift, and go to state 181
    BITWISE_AND_ASSIGNMENT  shift, and go to state 182
    BITWISE_XOR_ASSIGNMENT  shift, and go to state 183
    BITWISE_OR_ASSIGNMENT   shift, and go to state 184

    $default  reduce using rule 24 (cast_expression)

    assignment_operator  go to state 185


State 111

   86 init_declarator: declarator ASSIGNMENT initializer .

    $default  reduce using rule 86 (init_declarator)


State 112

  186 compound_statement: CURLY_BRACKET_OPEN . block_item_list CURLY_BRACKET_CLOSE
  187                   | CURLY_BRACKET_OPEN . CURLY_BRACKET_CLOSE

    AUTO                  shift, and go to state 1
    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CHAR                  shift, and go to state 2
    CONST                 shift, and go to state 3
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    DOUBLE                shift, and go to state 4
    ENUM                  shift, and go to state 5
    EXTERN                shift, and go to state 6
    FLOAT                 shift, and go to state 7
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    INLINE                shift, and go to state 8
    INT                   shift, and go to state 9
    LONG                  shift, and go to state 10
    REGISTER              shift, and go to state 11
    RESTRICT              shift, and go to state 12
    RETURN                shift, and go to state 194
    SHORT                 shift, and go to state 13
    SIGNED                shift, and go to state 14
    SIZEOF                shift, and go to state 76
    STATIC                shift, and go to state 15
    SWITCH                shift, and go to state 195
    UNSIGNED              shift, and go to state 16
    VOID                  shift, and go to state 17
    VOLATILE              shift, and go to state 18
    WHILE                 shift, and go to state 196
    _BOOL                 shift, and go to state 19
    _COMPLEX              shift, and go to state 20
    _IMAGINARY            shift, and go to state 21
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    CURLY_BRACKET_CLOSE   shift, and go to state 197
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    declaration_specifiers     go to state 60
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    declaration                go to state 202
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 203
    labeled_statement          go to state 204
    compound_statement         go to state 205
    block_item_list            go to state 206
    block_item                 go to state 207
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 113

  208 function_definition: declaration_specifiers declarator CT compound_statement .

    $default  reduce using rule 208 (function_definition)


State 114

  210 declaration_list: declaration_list declaration .

    $default  reduce using rule 210 (declaration_list)


State 115

  207 function_definition: declaration_specifiers declarator declaration_list CT . compound_statement

    CURLY_BRACKET_OPEN  shift, and go to state 112

    compound_statement  go to state 211


State 116

  129 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC . type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE
  130                  | direct_declarator SQUARE_BRACKET_OPEN STATIC . assignment_expression SQUARE_BRACKET_CLOSE

    CONST                 shift, and go to state 3
    RESTRICT              shift, and go to state 12
    SIZEOF                shift, and go to state 76
    VOLATILE              shift, and go to state 18
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 212
    primary_expression         go to state 108
    type_qualifier             go to state 54
    type_qualifier_list        go to state 213
    relational_expression      go to state 109
    unary_expression           go to state 110


State 117

  128 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 128 (direct_declarator)


State 118

   19 unary_operator: MULTIPLY .
  132 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN MULTIPLY . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 214

    $default  reduce using rule 19 (unary_operator)


State 119

  127 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 215


State 120

  125 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . assignment_expression SQUARE_BRACKET_CLOSE
  126                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . SQUARE_BRACKET_CLOSE
  131                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . MULTIPLY SQUARE_BRACKET_CLOSE
  142 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST                 shift, and go to state 3
    RESTRICT              shift, and go to state 12
    SIZEOF                shift, and go to state 76
    VOLATILE              shift, and go to state 18
    SQUARE_BRACKET_CLOSE  shift, and go to state 216
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 217
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 218
    primary_expression         go to state 108
    type_qualifier             go to state 72
    relational_expression      go to state 109
    unary_expression           go to state 110


State 121

  162 identifier_list: IDENTIFIER .

    $default  reduce using rule 162 (identifier_list)


State 122

  133 direct_declarator: direct_declarator ROUND_BRACKET_OPEN CT . parameter_type_list ROUND_BRACKET_CLOSE
  135                  | direct_declarator ROUND_BRACKET_OPEN CT . ROUND_BRACKET_CLOSE

    AUTO                 shift, and go to state 1
    CHAR                 shift, and go to state 2
    CONST                shift, and go to state 3
    DOUBLE               shift, and go to state 4
    ENUM                 shift, and go to state 5
    EXTERN               shift, and go to state 6
    FLOAT                shift, and go to state 7
    INLINE               shift, and go to state 8
    INT                  shift, and go to state 9
    LONG                 shift, and go to state 10
    REGISTER             shift, and go to state 11
    RESTRICT             shift, and go to state 12
    SHORT                shift, and go to state 13
    SIGNED               shift, and go to state 14
    STATIC               shift, and go to state 15
    UNSIGNED             shift, and go to state 16
    VOID                 shift, and go to state 17
    VOLATILE             shift, and go to state 18
    _BOOL                shift, and go to state 19
    _COMPLEX             shift, and go to state 20
    _IMAGINARY           shift, and go to state 21
    ROUND_BRACKET_CLOSE  shift, and go to state 219

    declaration_specifiers   go to state 220
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_type_list      go to state 221
    parameter_list           go to state 222
    parameter_declaration    go to state 223


State 123

  134 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list . ROUND_BRACKET_CLOSE
  163 identifier_list: identifier_list . COMMA IDENTIFIER

    ROUND_BRACKET_CLOSE  shift, and go to state 224
    COMMA                shift, and go to state 225


State 124

   80 constant_expression: conditional_expression .

    $default  reduce using rule 80 (constant_expression)


State 125

  116 enumerator: IDENTIFIER ASSIGNMENT constant_expression .

    $default  reduce using rule 116 (enumerator)


State 126

   24 cast_expression: unary_expression .

    $default  reduce using rule 24 (cast_expression)


State 127

  111 enum_specifier: ENUM CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 111 (enum_specifier)


State 128

  114 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 114 (enumerator_list)


State 129

  108 enum_specifier: ENUM IDENTIFIER CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 108 (enum_specifier)


State 130

  110 enum_specifier: ENUM IDENTIFIER CURLY_BRACKET_OPEN enumerator_list COMMA . CURLY_BRACKET_CLOSE
  114 enumerator_list: enumerator_list COMMA . enumerator

    CURLY_BRACKET_CLOSE  shift, and go to state 226
    IDENTIFIER           shift, and go to state 49

    enumerator  go to state 128


State 131

   13 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   66 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
  155 unary_expression: SIZEOF ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE

    CHAR                  shift, and go to state 2
    CONST                 shift, and go to state 3
    DOUBLE                shift, and go to state 4
    ENUM                  shift, and go to state 5
    FLOAT                 shift, and go to state 7
    INT                   shift, and go to state 9
    LONG                  shift, and go to state 10
    RESTRICT              shift, and go to state 12
    SHORT                 shift, and go to state 13
    SIGNED                shift, and go to state 14
    SIZEOF                shift, and go to state 76
    UNSIGNED              shift, and go to state 16
    VOID                  shift, and go to state 17
    VOLATILE              shift, and go to state 18
    _BOOL                 shift, and go to state 19
    _COMPLEX              shift, and go to state 20
    _IMAGINARY            shift, and go to state 21
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 134
    type_specifier             go to state 135
    specifier_qualifier_list   go to state 136
    enum_specifier             go to state 26
    type_qualifier             go to state 137
    relational_expression      go to state 109
    unary_expression           go to state 110
    type_name                  go to state 227


State 132

  154 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 154 (unary_expression)


State 133

   78 expression: assignment_expression .

    $default  reduce using rule 78 (expression)


State 134

   66 primary_expression: ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE
   79 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 228
    COMMA                shift, and go to state 229


State 135

  104 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  105                         | type_specifier .

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 105 (specifier_qualifier_list)

    type_specifier            go to state 135
    specifier_qualifier_list  go to state 230
    enum_specifier            go to state 26
    type_qualifier            go to state 137


State 136

  164 type_name: specifier_qualifier_list .

    $default  reduce using rule 164 (type_name)


State 137

  106 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  107                         | type_qualifier .

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 7
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 107 (specifier_qualifier_list)

    type_specifier            go to state 135
    specifier_qualifier_list  go to state 231
    enum_specifier            go to state 26
    type_qualifier            go to state 137


State 138

   13 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   25 cast_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE cast_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 232


State 139

  175 designator: SQUARE_BRACKET_OPEN . constant_expression SQUARE_BRACKET_CLOSE

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 124
    primary_expression         go to state 108
    constant_expression        go to state 233
    relational_expression      go to state 109
    unary_expression           go to state 126


State 140

  176 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 234


State 141

  169 initializer_list: initializer .

    $default  reduce using rule 169 (initializer_list)


State 142

  166 initializer: CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
  167            | CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE
  170 initializer_list: initializer_list . COMMA designation initializer
  171                 | initializer_list . COMMA initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 235
    COMMA                shift, and go to state 236


State 143

  168 initializer_list: designation . initializer

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 78
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 107
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 110
    initializer                go to state 237


State 144

  172 designation: designator_list . ASSIGNMENT
  174 designator_list: designator_list . designator

    SQUARE_BRACKET_OPEN  shift, and go to state 139
    DOT                  shift, and go to state 140
    ASSIGNMENT           shift, and go to state 238

    designator  go to state 239


State 145

  173 designator_list: designator .

    $default  reduce using rule 173 (designator_list)


State 146

   13 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   66 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE

    CHAR                  shift, and go to state 2
    CONST                 shift, and go to state 3
    DOUBLE                shift, and go to state 4
    ENUM                  shift, and go to state 5
    FLOAT                 shift, and go to state 7
    INT                   shift, and go to state 9
    LONG                  shift, and go to state 10
    RESTRICT              shift, and go to state 12
    SHORT                 shift, and go to state 13
    SIGNED                shift, and go to state 14
    SIZEOF                shift, and go to state 76
    UNSIGNED              shift, and go to state 16
    VOID                  shift, and go to state 17
    VOLATILE              shift, and go to state 18
    _BOOL                 shift, and go to state 19
    _COMPLEX              shift, and go to state 20
    _IMAGINARY            shift, and go to state 21
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 134
    type_specifier             go to state 135
    specifier_qualifier_list   go to state 136
    enum_specifier             go to state 26
    type_qualifier             go to state 137
    relational_expression      go to state 109
    unary_expression           go to state 110
    type_name                  go to state 240


State 147

  151 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 151 (unary_expression)


State 148

  152 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 152 (unary_expression)


State 149

    6 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN . expression SQUARE_BRACKET_CLOSE

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 241
    relational_expression      go to state 109
    unary_expression           go to state 110


State 150

    7 postfix_expression: postfix_expression ROUND_BRACKET_OPEN . ROUND_BRACKET_CLOSE
    8                   | postfix_expression ROUND_BRACKET_OPEN . argument_expression_list ROUND_BRACKET_CLOSE

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    ROUND_BRACKET_CLOSE   shift, and go to state 242
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 243
    primary_expression         go to state 108
    argument_expression_list   go to state 244
    relational_expression      go to state 109
    unary_expression           go to state 110


State 151

    9 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 245


State 152

   10 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 246


State 153

   11 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 11 (postfix_expression)


State 154

   12 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 12 (postfix_expression)


State 155

  153 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 153 (unary_expression)


State 156

   27 multiplicative_expression: multiplicative_expression MULTIPLY . cast_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant            go to state 93
    postfix_expression  go to state 94
    unary_operator      go to state 95
    cast_expression     go to state 247
    primary_expression  go to state 108
    unary_expression    go to state 126


State 157

   28 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant            go to state 93
    postfix_expression  go to state 94
    unary_operator      go to state 95
    cast_expression     go to state 248
    primary_expression  go to state 108
    unary_expression    go to state 126


State 158

   29 multiplicative_expression: multiplicative_expression MODULUS . cast_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant            go to state 93
    postfix_expression  go to state 94
    unary_operator      go to state 95
    cast_expression     go to state 249
    primary_expression  go to state 108
    unary_expression    go to state 126


State 159

   31 additive_expression: additive_expression ADD . multiplicative_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 250
    primary_expression         go to state 108
    unary_expression           go to state 126


State 160

   32 additive_expression: additive_expression SUBTRACT . multiplicative_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 251
    primary_expression         go to state 108
    unary_expression           go to state 126


State 161

   34 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 252
    primary_expression         go to state 108
    unary_expression           go to state 126


State 162

   35 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 253
    primary_expression         go to state 108
    unary_expression           go to state 126


State 163

   45 equality_expression: equality_expression EQUAL_TO . relational_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    primary_expression         go to state 108
    relational_expression      go to state 254
    unary_expression           go to state 126


State 164

   46 equality_expression: equality_expression NOT_EQUAL_TO . relational_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    primary_expression         go to state 108
    relational_expression      go to state 255
    unary_expression           go to state 126


State 165

   48 AND_expression: AND_expression BITWISE_AND . equality_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 256
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 126


State 166

   50 exclusive_OR_expression: exclusive_OR_expression BITWISE_XOR . AND_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 257
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 126


State 167

   52 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR . exclusive_OR_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 258
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 126


State 168

   54 logical_AND_expression: logical_AND_expression N . LOGICAL_AND M inclusive_OR_expression

    LOGICAL_AND  shift, and go to state 259


State 169

   56 logical_OR_expression: logical_OR_expression N . LOGICAL_OR M logical_AND_expression
   60 conditional_expression: logical_OR_expression N . QUESTION_MARK M expression N COLON M conditional_expression

    LOGICAL_OR     shift, and go to state 260
    QUESTION_MARK  shift, and go to state 261


State 170

  146 relational_expression: relational_expression LESS_THAN . shift_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 262
    primary_expression         go to state 108
    unary_expression           go to state 126


State 171

  147 relational_expression: relational_expression GREATER_THAN . shift_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 263
    primary_expression         go to state 108
    unary_expression           go to state 126


State 172

  148 relational_expression: relational_expression LESS_THAN_OR_EQUAL_TO . shift_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 264
    primary_expression         go to state 108
    unary_expression           go to state 126


State 173

  149 relational_expression: relational_expression GREATER_THAN_OR_EQUAL_TO . shift_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 265
    primary_expression         go to state 108
    unary_expression           go to state 126


State 174

   67 assignment_operator: ASSIGNMENT .

    $default  reduce using rule 67 (assignment_operator)


State 175

   68 assignment_operator: MULTIPLY_ASSIGNMENT .

    $default  reduce using rule 68 (assignment_operator)


State 176

   69 assignment_operator: DIVIDE_ASSIGNMENT .

    $default  reduce using rule 69 (assignment_operator)


State 177

   70 assignment_operator: MODULUS_ASSIGNMENT .

    $default  reduce using rule 70 (assignment_operator)


State 178

   71 assignment_operator: ADD_ASSIGNMENT .

    $default  reduce using rule 71 (assignment_operator)


State 179

   72 assignment_operator: SUBTRACT_ASSIGNMENT .

    $default  reduce using rule 72 (assignment_operator)


State 180

   73 assignment_operator: LEFT_SHIFT_ASSIGNMENT .

    $default  reduce using rule 73 (assignment_operator)


State 181

   74 assignment_operator: RIGHT_SHIFT_ASSIGNMENT .

    $default  reduce using rule 74 (assignment_operator)


State 182

   75 assignment_operator: BITWISE_AND_ASSIGNMENT .

    $default  reduce using rule 75 (assignment_operator)


State 183

   76 assignment_operator: BITWISE_XOR_ASSIGNMENT .

    $default  reduce using rule 76 (assignment_operator)


State 184

   77 assignment_operator: BITWISE_OR_ASSIGNMENT .

    $default  reduce using rule 77 (assignment_operator)


State 185

   62 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 266
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 110


State 186

  200 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 267


State 187

  184 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 124
    primary_expression         go to state 108
    constant_expression        go to state 268
    relational_expression      go to state 109
    unary_expression           go to state 126


State 188

  199 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 269


State 189

  185 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 270


State 190

  195 iteration_statement: DO . M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 57 (M)

    M  go to state 271


State 191

  196 iteration_statement: FOR . ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement
  197                    | FOR . ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 272


State 192

  198 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 273


State 193

   15 selection_statement: IF . ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N
   16                    | IF . ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 274


State 194

  201 jump_statement: RETURN . expression SEMICOLON
  202               | RETURN . SEMICOLON

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 275
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 276
    relational_expression      go to state 109
    unary_expression           go to state 110


State 195

   17 selection_statement: SWITCH . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 277


State 196

  194 iteration_statement: WHILE . M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 57 (M)

    M  go to state 278


State 197

  187 compound_statement: CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE .

    $default  reduce using rule 187 (compound_statement)


State 198

  193 expression_statement: SEMICOLON .

    $default  reduce using rule 193 (expression_statement)


State 199

   63 primary_expression: IDENTIFIER .
  183 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 279

    $default  reduce using rule 63 (primary_expression)


State 200

  180 statement: selection_statement .

    $default  reduce using rule 180 (statement)


State 201

   79 expression: expression . COMMA assignment_expression
  192 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 280
    COMMA      shift, and go to state 229


State 202

  190 block_item: declaration .

    $default  reduce using rule 190 (block_item)


State 203

  191 block_item: statement .

    $default  reduce using rule 191 (block_item)


State 204

  177 statement: labeled_statement .

    $default  reduce using rule 177 (statement)


State 205

  178 statement: compound_statement .

    $default  reduce using rule 178 (statement)


State 206

  186 compound_statement: CURLY_BRACKET_OPEN block_item_list . CURLY_BRACKET_CLOSE
  189 block_item_list: block_item_list . M block_item

    CURLY_BRACKET_CLOSE  shift, and go to state 281

    $default  reduce using rule 57 (M)

    M  go to state 282


State 207

  188 block_item_list: block_item .

    $default  reduce using rule 188 (block_item_list)


State 208

  179 statement: expression_statement .

    $default  reduce using rule 179 (statement)


State 209

  181 statement: iteration_statement .

    $default  reduce using rule 181 (statement)


State 210

  182 statement: jump_statement .

    $default  reduce using rule 182 (statement)


State 211

  207 function_definition: declaration_specifiers declarator declaration_list CT compound_statement .

    $default  reduce using rule 207 (function_definition)


State 212

  130 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 283


State 213

  129 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list . assignment_expression SQUARE_BRACKET_CLOSE
  142 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST                 shift, and go to state 3
    RESTRICT              shift, and go to state 12
    SIZEOF                shift, and go to state 76
    VOLATILE              shift, and go to state 18
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 284
    primary_expression         go to state 108
    type_qualifier             go to state 72
    relational_expression      go to state 109
    unary_expression           go to state 110


State 214

  132 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN MULTIPLY SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 132 (direct_declarator)


State 215

  127 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 127 (direct_declarator)


State 216

  126 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 126 (direct_declarator)


State 217

   19 unary_operator: MULTIPLY .
  131 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MULTIPLY . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 285

    $default  reduce using rule 19 (unary_operator)


State 218

  125 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 286


State 219

  135 direct_declarator: direct_declarator ROUND_BRACKET_OPEN CT ROUND_BRACKET_CLOSE .

    $default  reduce using rule 135 (direct_declarator)


State 220

  160 parameter_declaration: declaration_specifiers . declarator
  161                      | declaration_specifiers .

    ROUND_BRACKET_OPEN  shift, and go to state 34
    MULTIPLY            shift, and go to state 35
    IDENTIFIER          shift, and go to state 37

    $default  reduce using rule 161 (parameter_declaration)

    declarator         go to state 287
    direct_declarator  go to state 41
    pointer            go to state 42


State 221

  133 direct_declarator: direct_declarator ROUND_BRACKET_OPEN CT parameter_type_list . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 288


State 222

  156 parameter_type_list: parameter_list .
  157                    | parameter_list . COMMA ELLIPSIS
  159 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 289

    $default  reduce using rule 156 (parameter_type_list)


State 223

  158 parameter_list: parameter_declaration .

    $default  reduce using rule 158 (parameter_list)


State 224

  134 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 134 (direct_declarator)


State 225

  163 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 290


State 226

  110 enum_specifier: ENUM IDENTIFIER CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 110 (enum_specifier)


State 227

   13 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
  155 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 291


State 228

   66 primary_expression: ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE .

    $default  reduce using rule 66 (primary_expression)


State 229

   79 expression: expression COMMA . assignment_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 292
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 110


State 230

  104 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 104 (specifier_qualifier_list)


State 231

  106 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 106 (specifier_qualifier_list)


State 232

   13 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   25 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . cast_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 293
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant            go to state 93
    postfix_expression  go to state 94
    unary_operator      go to state 95
    cast_expression     go to state 294
    primary_expression  go to state 108
    unary_expression    go to state 126


State 233

  175 designator: SQUARE_BRACKET_OPEN constant_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 295


State 234

  176 designator: DOT IDENTIFIER .

    $default  reduce using rule 176 (designator)


State 235

  166 initializer: CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 166 (initializer)


State 236

  167 initializer: CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE
  170 initializer_list: initializer_list COMMA . designation initializer
  171                 | initializer_list COMMA . initializer

    SIZEOF                shift, and go to state 76
    SQUARE_BRACKET_OPEN   shift, and go to state 139
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 78
    CURLY_BRACKET_CLOSE   shift, and go to state 296
    DOT                   shift, and go to state 140
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 107
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 110
    initializer                go to state 297
    designation                go to state 298
    designator_list            go to state 144
    designator                 go to state 145


State 237

  168 initializer_list: designation initializer .

    $default  reduce using rule 168 (initializer_list)


State 238

  172 designation: designator_list ASSIGNMENT .

    $default  reduce using rule 172 (designation)


State 239

  174 designator_list: designator_list designator .

    $default  reduce using rule 174 (designator_list)


State 240

   13 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 299


State 241

    6 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression . SQUARE_BRACKET_CLOSE
   79 expression: expression . COMMA assignment_expression

    SQUARE_BRACKET_CLOSE  shift, and go to state 300
    COMMA                 shift, and go to state 229


State 242

    7 postfix_expression: postfix_expression ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE .

    $default  reduce using rule 7 (postfix_expression)


State 243

  143 argument_expression_list: assignment_expression .

    $default  reduce using rule 143 (argument_expression_list)


State 244

    8 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list . ROUND_BRACKET_CLOSE
  144 argument_expression_list: argument_expression_list . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 301
    COMMA                shift, and go to state 302


State 245

    9 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 9 (postfix_expression)


State 246

   10 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 10 (postfix_expression)


State 247

   27 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression .

    $default  reduce using rule 27 (multiplicative_expression)


State 248

   28 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 28 (multiplicative_expression)


State 249

   29 multiplicative_expression: multiplicative_expression MODULUS cast_expression .

    $default  reduce using rule 29 (multiplicative_expression)


State 250

   27 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   28                          | multiplicative_expression . DIVIDE cast_expression
   29                          | multiplicative_expression . MODULUS cast_expression
   31 additive_expression: additive_expression ADD multiplicative_expression .

    MULTIPLY  shift, and go to state 156
    DIVIDE    shift, and go to state 157
    MODULUS   shift, and go to state 158

    $default  reduce using rule 31 (additive_expression)


State 251

   27 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   28                          | multiplicative_expression . DIVIDE cast_expression
   29                          | multiplicative_expression . MODULUS cast_expression
   32 additive_expression: additive_expression SUBTRACT multiplicative_expression .

    MULTIPLY  shift, and go to state 156
    DIVIDE    shift, and go to state 157
    MODULUS   shift, and go to state 158

    $default  reduce using rule 32 (additive_expression)


State 252

   31 additive_expression: additive_expression . ADD multiplicative_expression
   32                    | additive_expression . SUBTRACT multiplicative_expression
   34 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    ADD       shift, and go to state 159
    SUBTRACT  shift, and go to state 160

    $default  reduce using rule 34 (shift_expression)


State 253

   31 additive_expression: additive_expression . ADD multiplicative_expression
   32                    | additive_expression . SUBTRACT multiplicative_expression
   35 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    ADD       shift, and go to state 159
    SUBTRACT  shift, and go to state 160

    $default  reduce using rule 35 (shift_expression)


State 254

   45 equality_expression: equality_expression EQUAL_TO relational_expression .
  146 relational_expression: relational_expression . LESS_THAN shift_expression
  147                      | relational_expression . GREATER_THAN shift_expression
  148                      | relational_expression . LESS_THAN_OR_EQUAL_TO shift_expression
  149                      | relational_expression . GREATER_THAN_OR_EQUAL_TO shift_expression

    LESS_THAN                 shift, and go to state 170
    GREATER_THAN              shift, and go to state 171
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 172
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 173

    $default  reduce using rule 45 (equality_expression)


State 255

   46 equality_expression: equality_expression NOT_EQUAL_TO relational_expression .
  146 relational_expression: relational_expression . LESS_THAN shift_expression
  147                      | relational_expression . GREATER_THAN shift_expression
  148                      | relational_expression . LESS_THAN_OR_EQUAL_TO shift_expression
  149                      | relational_expression . GREATER_THAN_OR_EQUAL_TO shift_expression

    LESS_THAN                 shift, and go to state 170
    GREATER_THAN              shift, and go to state 171
    LESS_THAN_OR_EQUAL_TO     shift, and go to state 172
    GREATER_THAN_OR_EQUAL_TO  shift, and go to state 173

    $default  reduce using rule 46 (equality_expression)


State 256

   45 equality_expression: equality_expression . EQUAL_TO relational_expression
   46                    | equality_expression . NOT_EQUAL_TO relational_expression
   48 AND_expression: AND_expression BITWISE_AND equality_expression .

    EQUAL_TO      shift, and go to state 163
    NOT_EQUAL_TO  shift, and go to state 164

    $default  reduce using rule 48 (AND_expression)


State 257

   48 AND_expression: AND_expression . BITWISE_AND equality_expression
   50 exclusive_OR_expression: exclusive_OR_expression BITWISE_XOR AND_expression .

    BITWISE_AND  shift, and go to state 165

    $default  reduce using rule 50 (exclusive_OR_expression)


State 258

   50 exclusive_OR_expression: exclusive_OR_expression . BITWISE_XOR AND_expression
   52 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR exclusive_OR_expression .

    BITWISE_XOR  shift, and go to state 166

    $default  reduce using rule 52 (inclusive_OR_expression)


State 259

   54 logical_AND_expression: logical_AND_expression N LOGICAL_AND . M inclusive_OR_expression

    $default  reduce using rule 57 (M)

    M  go to state 303


State 260

   56 logical_OR_expression: logical_OR_expression N LOGICAL_OR . M logical_AND_expression

    $default  reduce using rule 57 (M)

    M  go to state 304


State 261

   60 conditional_expression: logical_OR_expression N QUESTION_MARK . M expression N COLON M conditional_expression

    $default  reduce using rule 57 (M)

    M  go to state 305


State 262

   34 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   35                 | shift_expression . RIGHT_SHIFT additive_expression
  146 relational_expression: relational_expression LESS_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 161
    RIGHT_SHIFT  shift, and go to state 162

    $default  reduce using rule 146 (relational_expression)


State 263

   34 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   35                 | shift_expression . RIGHT_SHIFT additive_expression
  147 relational_expression: relational_expression GREATER_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 161
    RIGHT_SHIFT  shift, and go to state 162

    $default  reduce using rule 147 (relational_expression)


State 264

   34 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   35                 | shift_expression . RIGHT_SHIFT additive_expression
  148 relational_expression: relational_expression LESS_THAN_OR_EQUAL_TO shift_expression .

    LEFT_SHIFT   shift, and go to state 161
    RIGHT_SHIFT  shift, and go to state 162

    $default  reduce using rule 148 (relational_expression)


State 265

   34 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   35                 | shift_expression . RIGHT_SHIFT additive_expression
  149 relational_expression: relational_expression GREATER_THAN_OR_EQUAL_TO shift_expression .

    LEFT_SHIFT   shift, and go to state 161
    RIGHT_SHIFT  shift, and go to state 162

    $default  reduce using rule 149 (relational_expression)


State 266

   62 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 62 (assignment_expression)


State 267

  200 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 200 (jump_statement)


State 268

  184 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 306


State 269

  199 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 199 (jump_statement)


State 270

  185 labeled_statement: DEFAULT COLON . statement

    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    RETURN                shift, and go to state 194
    SIZEOF                shift, and go to state 76
    SWITCH                shift, and go to state 195
    WHILE                 shift, and go to state 196
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 307
    labeled_statement          go to state 204
    compound_statement         go to state 205
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 271

  195 iteration_statement: DO M . statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    RETURN                shift, and go to state 194
    SIZEOF                shift, and go to state 76
    SWITCH                shift, and go to state 195
    WHILE                 shift, and go to state 196
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 308
    labeled_statement          go to state 204
    compound_statement         go to state 205
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 272

  196 iteration_statement: FOR ROUND_BRACKET_OPEN . expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement
  197                    | FOR ROUND_BRACKET_OPEN . expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    expression_statement       go to state 309


State 273

  198 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 310


State 274

   15 selection_statement: IF ROUND_BRACKET_OPEN . expression N ROUND_BRACKET_CLOSE M statement N
   16                    | IF ROUND_BRACKET_OPEN . expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 311
    relational_expression      go to state 109
    unary_expression           go to state 110


State 275

  202 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 202 (jump_statement)


State 276

   79 expression: expression . COMMA assignment_expression
  201 jump_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 312
    COMMA      shift, and go to state 229


State 277

   17 selection_statement: SWITCH ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 313
    relational_expression      go to state 109
    unary_expression           go to state 110


State 278

  194 iteration_statement: WHILE M . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 314


State 279

  183 labeled_statement: IDENTIFIER COLON . statement

    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    RETURN                shift, and go to state 194
    SIZEOF                shift, and go to state 76
    SWITCH                shift, and go to state 195
    WHILE                 shift, and go to state 196
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 315
    labeled_statement          go to state 204
    compound_statement         go to state 205
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 280

  192 expression_statement: expression SEMICOLON .

    $default  reduce using rule 192 (expression_statement)


State 281

  186 compound_statement: CURLY_BRACKET_OPEN block_item_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 186 (compound_statement)


State 282

  189 block_item_list: block_item_list M . block_item

    AUTO                  shift, and go to state 1
    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CHAR                  shift, and go to state 2
    CONST                 shift, and go to state 3
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    DOUBLE                shift, and go to state 4
    ENUM                  shift, and go to state 5
    EXTERN                shift, and go to state 6
    FLOAT                 shift, and go to state 7
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    INLINE                shift, and go to state 8
    INT                   shift, and go to state 9
    LONG                  shift, and go to state 10
    REGISTER              shift, and go to state 11
    RESTRICT              shift, and go to state 12
    RETURN                shift, and go to state 194
    SHORT                 shift, and go to state 13
    SIGNED                shift, and go to state 14
    SIZEOF                shift, and go to state 76
    STATIC                shift, and go to state 15
    SWITCH                shift, and go to state 195
    UNSIGNED              shift, and go to state 16
    VOID                  shift, and go to state 17
    VOLATILE              shift, and go to state 18
    WHILE                 shift, and go to state 196
    _BOOL                 shift, and go to state 19
    _COMPLEX              shift, and go to state 20
    _IMAGINARY            shift, and go to state 21
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    declaration_specifiers     go to state 60
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    declaration                go to state 202
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 203
    labeled_statement          go to state 204
    compound_statement         go to state 205
    block_item                 go to state 316
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 283

  130 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 130 (direct_declarator)


State 284

  129 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 317


State 285

  131 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list MULTIPLY SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 131 (direct_declarator)


State 286

  125 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 125 (direct_declarator)


State 287

  160 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 160 (parameter_declaration)


State 288

  133 direct_declarator: direct_declarator ROUND_BRACKET_OPEN CT parameter_type_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 133 (direct_declarator)


State 289

  157 parameter_type_list: parameter_list COMMA . ELLIPSIS
  159 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT       shift, and go to state 7
    INLINE      shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    ELLIPSIS    shift, and go to state 318

    declaration_specifiers   go to state 220
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 319


State 290

  163 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 163 (identifier_list)


State 291

   13 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
  155 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE .

    CURLY_BRACKET_OPEN  shift, and go to state 293

    $default  reduce using rule 155 (unary_expression)


State 292

   79 expression: expression COMMA assignment_expression .

    $default  reduce using rule 79 (expression)


State 293

   13 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SIZEOF                shift, and go to state 76
    SQUARE_BRACKET_OPEN   shift, and go to state 139
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 78
    DOT                   shift, and go to state 140
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 107
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 110
    initializer                go to state 141
    initializer_list           go to state 320
    designation                go to state 143
    designator_list            go to state 144
    designator                 go to state 145


State 294

   25 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression .

    $default  reduce using rule 25 (cast_expression)


State 295

  175 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 175 (designator)


State 296

  167 initializer: CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 167 (initializer)


State 297

  171 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 171 (initializer_list)


State 298

  170 initializer_list: initializer_list COMMA designation . initializer

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 78
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 107
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 110
    initializer                go to state 321


State 299

   13 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 293


State 300

    6 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 6 (postfix_expression)


State 301

    8 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 8 (postfix_expression)


State 302

  144 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 322
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 110


State 303

   54 logical_AND_expression: logical_AND_expression N LOGICAL_AND M . inclusive_OR_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 323
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 126


State 304

   56 logical_OR_expression: logical_OR_expression N LOGICAL_OR M . logical_AND_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 324
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 126


State 305

   60 conditional_expression: logical_OR_expression N QUESTION_MARK M . expression N COLON M conditional_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 325
    relational_expression      go to state 109
    unary_expression           go to state 110


State 306

  184 labeled_statement: CASE constant_expression COLON . statement

    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    RETURN                shift, and go to state 194
    SIZEOF                shift, and go to state 76
    SWITCH                shift, and go to state 195
    WHILE                 shift, and go to state 196
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 326
    labeled_statement          go to state 204
    compound_statement         go to state 205
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 307

  185 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 185 (labeled_statement)


State 308

  195 iteration_statement: DO M statement . M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    $default  reduce using rule 57 (M)

    M  go to state 327


State 309

  196 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement . M expression_statement ROUND_BRACKET_CLOSE M statement
  197                    | FOR ROUND_BRACKET_OPEN expression_statement . M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 57 (M)

    M  go to state 328


State 310

  198 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 198 (jump_statement)


State 311

   15 selection_statement: IF ROUND_BRACKET_OPEN expression . N ROUND_BRACKET_CLOSE M statement N
   16                    | IF ROUND_BRACKET_OPEN expression . N ROUND_BRACKET_CLOSE M statement N ELSE M statement
   79 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 229

    $default  reduce using rule 58 (N)

    N  go to state 329


State 312

  201 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 201 (jump_statement)


State 313

   17 selection_statement: SWITCH ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement
   79 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 330
    COMMA                shift, and go to state 229


State 314

  194 iteration_statement: WHILE M ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE M statement

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 331
    relational_expression      go to state 109
    unary_expression           go to state 110


State 315

  183 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 183 (labeled_statement)


State 316

  189 block_item_list: block_item_list M block_item .

    $default  reduce using rule 189 (block_item_list)


State 317

  129 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 129 (direct_declarator)


State 318

  157 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 157 (parameter_type_list)


State 319

  159 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 159 (parameter_list)


State 320

   13 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
   14                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE
  170 initializer_list: initializer_list . COMMA designation initializer
  171                 | initializer_list . COMMA initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 332
    COMMA                shift, and go to state 333


State 321

  170 initializer_list: initializer_list COMMA designation initializer .

    $default  reduce using rule 170 (initializer_list)


State 322

  144 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 144 (argument_expression_list)


State 323

   52 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   54 logical_AND_expression: logical_AND_expression N LOGICAL_AND M inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 167

    $default  reduce using rule 54 (logical_AND_expression)


State 324

   54 logical_AND_expression: logical_AND_expression . N LOGICAL_AND M inclusive_OR_expression
   56 logical_OR_expression: logical_OR_expression N LOGICAL_OR M logical_AND_expression .

    LOGICAL_AND  reduce using rule 58 (N)
    $default     reduce using rule 56 (logical_OR_expression)

    N  go to state 168


State 325

   60 conditional_expression: logical_OR_expression N QUESTION_MARK M expression . N COLON M conditional_expression
   79 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 229

    $default  reduce using rule 58 (N)

    N  go to state 334


State 326

  184 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 184 (labeled_statement)


State 327

  195 iteration_statement: DO M statement M . WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    WHILE  shift, and go to state 335


State 328

  196 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M . expression_statement ROUND_BRACKET_CLOSE M statement
  197                    | FOR ROUND_BRACKET_OPEN expression_statement M . expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    expression_statement       go to state 336


State 329

   15 selection_statement: IF ROUND_BRACKET_OPEN expression N . ROUND_BRACKET_CLOSE M statement N
   16                    | IF ROUND_BRACKET_OPEN expression N . ROUND_BRACKET_CLOSE M statement N ELSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 337


State 330

   17 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    RETURN                shift, and go to state 194
    SIZEOF                shift, and go to state 76
    SWITCH                shift, and go to state 195
    WHILE                 shift, and go to state 196
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 338
    labeled_statement          go to state 204
    compound_statement         go to state 205
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 331

   79 expression: expression . COMMA assignment_expression
  194 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 339
    COMMA                shift, and go to state 229


State 332

   13 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 13 (postfix_expression)


State 333

   14 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE
  170 initializer_list: initializer_list COMMA . designation initializer
  171                 | initializer_list COMMA . initializer

    SIZEOF                shift, and go to state 76
    SQUARE_BRACKET_OPEN   shift, and go to state 139
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 78
    CURLY_BRACKET_CLOSE   shift, and go to state 340
    DOT                   shift, and go to state 140
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 107
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 110
    initializer                go to state 297
    designation                go to state 298
    designator_list            go to state 144
    designator                 go to state 145


State 334

   60 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N . COLON M conditional_expression

    COLON  shift, and go to state 341


State 335

  195 iteration_statement: DO M statement M WHILE . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 342


State 336

  196 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement . ROUND_BRACKET_CLOSE M statement
  197                    | FOR ROUND_BRACKET_OPEN expression_statement M expression_statement . M expression N ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 343

    $default  reduce using rule 57 (M)

    M  go to state 344


State 337

   15 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE . M statement N
   16                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE . M statement N ELSE M statement

    $default  reduce using rule 57 (M)

    M  go to state 345


State 338

   17 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 17 (selection_statement)


State 339

  194 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . M statement

    $default  reduce using rule 57 (M)

    M  go to state 346


State 340

   14 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 14 (postfix_expression)


State 341

   60 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N COLON . M conditional_expression

    $default  reduce using rule 57 (M)

    M  go to state 347


State 342

  195 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE SEMICOLON

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 348
    relational_expression      go to state 109
    unary_expression           go to state 110


State 343

  196 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE . M statement

    $default  reduce using rule 57 (M)

    M  go to state 349


State 344

  197 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M . expression N ROUND_BRACKET_CLOSE M statement

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 350
    relational_expression      go to state 109
    unary_expression           go to state 110


State 345

   15 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M . statement N
   16                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M . statement N ELSE M statement

    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    RETURN                shift, and go to state 194
    SIZEOF                shift, and go to state 76
    SWITCH                shift, and go to state 195
    WHILE                 shift, and go to state 196
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 351
    labeled_statement          go to state 204
    compound_statement         go to state 205
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 346

  194 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M . statement

    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    RETURN                shift, and go to state 194
    SIZEOF                shift, and go to state 76
    SWITCH                shift, and go to state 195
    WHILE                 shift, and go to state 196
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 352
    labeled_statement          go to state 204
    compound_statement         go to state 205
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 347

   60 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N COLON M . conditional_expression

    SIZEOF                shift, and go to state 76
    ROUND_BRACKET_OPEN    shift, and go to state 77
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    IDENTIFIER            shift, and go to state 87
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 353
    primary_expression         go to state 108
    relational_expression      go to state 109
    unary_expression           go to state 126


State 348

   79 expression: expression . COMMA assignment_expression
  195 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_CLOSE  shift, and go to state 354
    COMMA                shift, and go to state 229


State 349

  196 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M . statement

    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    RETURN                shift, and go to state 194
    SIZEOF                shift, and go to state 76
    SWITCH                shift, and go to state 195
    WHILE                 shift, and go to state 196
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 355
    labeled_statement          go to state 204
    compound_statement         go to state 205
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 350

   79 expression: expression . COMMA assignment_expression
  197 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression . N ROUND_BRACKET_CLOSE M statement

    COMMA  shift, and go to state 229

    $default  reduce using rule 58 (N)

    N  go to state 356


State 351

   15 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement . N
   16                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement . N ELSE M statement

    $default  reduce using rule 58 (N)

    N  go to state 357


State 352

  194 iteration_statement: WHILE M ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE M statement .

    $default  reduce using rule 194 (iteration_statement)


State 353

   60 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N COLON M conditional_expression .

    $default  reduce using rule 60 (conditional_expression)


State 354

  195 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 358


State 355

  196 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement ROUND_BRACKET_CLOSE M statement .

    $default  reduce using rule 196 (iteration_statement)


State 356

  197 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N . ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 359


State 357

   15 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N .
   16                    | IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N . ELSE M statement

    ELSE  shift, and go to state 360

    $default  reduce using rule 15 (selection_statement)


State 358

  195 iteration_statement: DO M statement M WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON .

    $default  reduce using rule 195 (iteration_statement)


State 359

  197 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE . M statement

    $default  reduce using rule 57 (M)

    M  go to state 361


State 360

   16 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE . M statement

    $default  reduce using rule 57 (M)

    M  go to state 362


State 361

  197 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M . statement

    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    RETURN                shift, and go to state 194
    SIZEOF                shift, and go to state 76
    SWITCH                shift, and go to state 195
    WHILE                 shift, and go to state 196
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 363
    labeled_statement          go to state 204
    compound_statement         go to state 205
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 362

   16 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M . statement

    BREAK                 shift, and go to state 186
    CASE                  shift, and go to state 187
    CONTINUE              shift, and go to state 188
    DEFAULT               shift, and go to state 189
    DO                    shift, and go to state 190
    FOR                   shift, and go to state 191
    GOTO                  shift, and go to state 192
    IF                    shift, and go to state 193
    RETURN                shift, and go to state 194
    SIZEOF                shift, and go to state 76
    SWITCH                shift, and go to state 195
    WHILE                 shift, and go to state 196
    ROUND_BRACKET_OPEN    shift, and go to state 77
    CURLY_BRACKET_OPEN    shift, and go to state 112
    INCREMENT             shift, and go to state 79
    DECREMENT             shift, and go to state 80
    BITWISE_AND           shift, and go to state 81
    MULTIPLY              shift, and go to state 82
    ADD                   shift, and go to state 83
    SUBTRACT              shift, and go to state 84
    BITWISE_NOT           shift, and go to state 85
    LOGICAL_NOT           shift, and go to state 86
    SEMICOLON             shift, and go to state 198
    IDENTIFIER            shift, and go to state 199
    STRING_LITERAL        shift, and go to state 88
    CHARACTER_CONSTANT    shift, and go to state 89
    ENUMERATION_CONSTANT  shift, and go to state 90
    FLOATING_CONSTANT     shift, and go to state 91
    INTEGER_CONSTANT      shift, and go to state 92

    constant                   go to state 93
    postfix_expression         go to state 94
    selection_statement        go to state 200
    unary_operator             go to state 95
    cast_expression            go to state 96
    multiplicative_expression  go to state 97
    additive_expression        go to state 98
    shift_expression           go to state 99
    equality_expression        go to state 100
    AND_expression             go to state 101
    exclusive_OR_expression    go to state 102
    inclusive_OR_expression    go to state 103
    logical_AND_expression     go to state 104
    logical_OR_expression      go to state 105
    conditional_expression     go to state 106
    assignment_expression      go to state 133
    primary_expression         go to state 108
    expression                 go to state 201
    relational_expression      go to state 109
    unary_expression           go to state 110
    statement                  go to state 364
    labeled_statement          go to state 204
    compound_statement         go to state 205
    expression_statement       go to state 208
    iteration_statement        go to state 209
    jump_statement             go to state 210


State 363

  197 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement .

    $default  reduce using rule 197 (iteration_statement)


State 364

   16 selection_statement: IF ROUND_BRACKET_OPEN expression N ROUND_BRACKET_CLOSE M statement N ELSE M statement .

    $default  reduce using rule 16 (selection_statement)
